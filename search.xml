<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Wiener-Kinchin theorem, 以及白噪声，以及噪声的单位里为什么有根号赫兹</title>
      <link href="/2025/03/11/wiener-kinchin-theorem-yi-ji-bai-zao-sheng-yi-ji-zao-sheng-de-dan-wei-li-wei-shi-me-you-gen-hao-he-zi/"/>
      <url>/2025/03/11/wiener-kinchin-theorem-yi-ji-bai-zao-sheng-yi-ji-zao-sheng-de-dan-wei-li-wei-shi-me-you-gen-hao-he-zi/</url>
      
        <content type="html"><![CDATA[<h3 id="Wiener-Kinchin-theorem-以及白噪声，以及噪声的单位里为什么有根号赫兹-sqrt-Hz"><a href="#Wiener-Kinchin-theorem-以及白噪声，以及噪声的单位里为什么有根号赫兹-sqrt-Hz" class="headerlink" title="Wiener-Kinchin theorem, 以及白噪声，以及噪声的单位里为什么有根号赫兹 $\sqrt{Hz}$"></a>Wiener-Kinchin theorem, 以及白噪声，以及噪声的单位里为什么有根号赫兹 $\sqrt{Hz}$</h3><p>如果有一个信号（噪声比如说），关联函数满足 (尖括号代表取平均值)</p><script type="math/tex; mode=display">C(\tau)=\langle x(t)x(t+\tau)\rangle.</script><p>定义 Fourier 变换后的关联函数为 </p><script type="math/tex; mode=display">\hat{C}(w) = \int_{-\infty}^{+\infty} d\tau e^{-iw\tau}C(\tau)</script><p>定义一段时间的坐标的 Fourier 变换,,, 这是考虑到测量到的总是一段时间的，所以是先取一段。</p><script type="math/tex; mode=display">\hat{x}_T(w)\equiv\int_{-T/2}^{T/2}dt e^{-iwt}x(t)</script><p>定义 一段时间的spectral power density 为 </p><script type="math/tex; mode=display">\hat{S}_T(w) \equiv \frac{1}{T}\langle|\hat{x}_T(w)|^2\rangle.</script><p>spectral power density 定义为 </p><script type="math/tex; mode=display">\hat{S}(w)\equiv \lim_{T\to\infty} S_T(w) \equiv \lim_{T\to\infty}\frac{1}{T}\langle|\hat{x}_T(w)|^2\rangle</script><p><strong>Wiener-Kinchin theorem:</strong> </p><script type="math/tex; mode=display">\hat{S}(w)=\hat{C}(w)</script><p>下面是简短的证明：Proof of Weiner-Kinchin theorem by direct calculation.</p><script type="math/tex; mode=display">\begin{align}\hat{S}(w)&=\lim_{T\to\infty}\frac{1}{T}\int_{-T/2}^{T/2}\int_{-T/2}^{T/2}dtds \langle x(s)x(t)\rangle e^{-iw(s-t)}\\&=\lim_{T\to\infty}\frac{1}{T}\int_{-T/2}^{T/2}\int_{-T/2}^{T/2}dtds\; C(s-t)\; e^{-iw(s-t)}\end{align}</script><p>考虑到积分性质 ( 可以画一个正方形的积分区间，然后观察一下)</p><script type="math/tex; mode=display">\int_{-T/2}^{T/2}ds\int_{-T/2}^{T/2}dt g(s-t)=\int_{-T}^T d\tau\; g(\tau)(T-|\tau|)</script><p>于是 spectral power density 是 </p><script type="math/tex; mode=display">\begin{align}\hat{S}(w)&=\lim_{T\to\infty}\frac{1}{T}\int_{-T}^{T}d\tau C(\tau)e^{-iw\tau}(T-|\tau|)\\&=\lim_{T\to\infty}\int_{-T}^{T}d\tau C(\tau)e^{-iw\tau}\\&=\hat{C}(w)\end{align}</script><p><strong>White Noise</strong></p><p>白噪声的特点是, (下一时刻的噪声和这一时刻没有关联)</p><script type="math/tex; mode=display">\langle x(t)\rangle=0,\quad \langle x(t)x(t+\tau)\rangle=A\delta(\tau).</script><p>既然关联函数是 delta 函数，correlation function 的频域函数是</p><script type="math/tex; mode=display">C(\tau)=A\delta(\tau)=A\frac{1}{\sqrt{2\pi}}\int dw e^{iw\tau}.\Rightarrow \hat{C}(w)=A</script><p>Note, 用到了 delta 函数的性质 $\int dx e^{iwx}=\sqrt{2\pi}\delta(w)$ . 根据 Weiner-Kinchin theorem ,spectral power density is </p><script type="math/tex; mode=display">\hat{S}(w)=Const= \lim_{T\to\infty}\frac{1}{T}\langle|\hat{x}_T(w)|^2\rangle</script><p><strong>Fourier transform of noise signal</strong> </p><p>现在做了测量，在时间 $-T/2\to T/2$ 之间有信号 $x(t)$. 他可以被 Fourier 展开 </p><script type="math/tex; mode=display">x(t)=\sum_{n=1}^{\infty}c_n e^{iw_n t},\quad w_n=\frac{2\pi}{T}n.</script><p>直接计算得到一段时间内的坐标在频域的函数</p><script type="math/tex; mode=display">\hat{x}(w_n)=\int_{-T/2}^{T/2}dt e^{-iw_nt}x(t)=Tc_n</script><p>所以 </p><script type="math/tex; mode=display">\hat{S}(w_n)=Const = \lim_{T\to\infty }\frac{1}{T}\langle|\hat{x}_T(w)|^2\rangle=T\langle|c_n|^2\rangle</script><p>既然这个常数与总时间 T 以及频率的取值 n 都没有关系。认为 $\langle|c_n|^2\rangle=\sigma^2$</p><p>于是 </p><script type="math/tex; mode=display">\langle|c_n|^2\rangle=\sigma^2 = \frac{1}{T}Const</script><p>如果说测量的信号的单位是  Tesla ($T$), 那么可以用这个常数来度量噪声的强度，单位是 $T^2\cdot s$. 或者说，用 $\sqrt{Const}$  来度量噪声的强度，单位是 $T/\sqrt{Hz}$. </p><p><strong>测量噪声的强度</strong></p><p>这里主要是和 matlab 的 fft代码关联。matlab fft 的作用是 </p><script type="math/tex; mode=display">Y(k)=\sum_{j=1}^N X(j)e^{-\frac{2\pi i}{N}(j-1)(k-1)}\\X(j)=\frac{1}{N}\sum_{k=1}^N Y(k)e^{\frac{2\pi i}{N}(j-1)(k-1)}</script><p>认为每一步的时间是 $t_j = \frac{j-1}{N}T_0$ ,  离散的频率取为 $\omega_k = \frac{2\pi}{T_0}(k-1)=\delta\omega (k-1) $。理解为 (时间的取值范围是 $0\to T_0(1-\frac{1}{N})$ , 频率的取值范围是 $0\to \frac{2\pi}{T_0}(N-1)$ ) </p><script type="math/tex; mode=display">Y(\omega_k)=\sum_{t_j = 0}^{T_0-\delta t} X(t_j)e^{-i\omega_kt_j}\\X(t_j)=\frac{1}{N}\sum_{\omega_k = 0}^{\frac{2\pi}{T_0}(N-1)}Y(\omega_k)e^{i\omega_k t_j}</script><p>如果将时间做一个平移，</p><script type="math/tex; mode=display">X(t_j-T/2+T/2)=\frac{1}{N}\sum_{\omega_k = 0}^{\frac{2\pi}{T_0}(N-1)}Y(\omega_k)e^{i\omega_k (t_j-T/2)}e^{i\omega_kT/2}</script><p>所以 $c_k =\frac{1}{N}|Y’(\omega_k)|=\frac{1}{N}|Y(\omega_k)|$。  所以用 fft 算出来的 Y 和需要的物理量 c 之间的关系就是这个。</p><p>之后再对各种频率的 $c^2$ 取平均，再乘以测量的总时间，再开根号就是需要的噪声水平。</p><script type="math/tex; mode=display">\sqrt{Const}=\left[T\frac{1}{N}\sum_{k=1}^N\left(\frac{1}{N}Y(w_k)\right)^2\right]^{1/2}=\left[\delta t\sum_{k=1}^N\left(\frac{1}{N}Y(w_k)\right)^2\right]^{1/2}.</script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>群论手写笔记</title>
      <link href="/2025/02/22/qun-lun-shou-xie-bi-ji/"/>
      <url>/2025/02/22/qun-lun-shou-xie-bi-ji/</url>
      
        <content type="html"><![CDATA[<p>前面杂七杂八的群论1，后面杂七杂八的李群。</p><p><a href="群论笔记.pdf.pdf">下载链接</a></p><embed src="./群论笔记.pdf" width="100%" height="900" type="application/pdf">]]></content>
      
      
      <categories>
          
          <category> 群论 </category>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GroupTheory </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>宇宙学笔记pdf版本</title>
      <link href="/2025/02/22/yu-zhou-xue-bi-ji-pdf-ban-ben/"/>
      <url>/2025/02/22/yu-zhou-xue-bi-ji-pdf-ban-ben/</url>
      
        <content type="html"><![CDATA[<p>持续更新，是宇宙学笔记的pdf版本。</p><p><a href="cosmology.pdf.pdf">下载链接</a></p><embed src="./cosmology.pdf" width="100%" height="900" type="application/pdf">]]></content>
      
      
      <categories>
          
          <category> 宇宙学 </category>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 宇宙学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Conformal Field and string</title>
      <link href="/2025/02/22/conformal-field-and-string/"/>
      <url>/2025/02/22/conformal-field-and-string/</url>
      
        <content type="html"><![CDATA[<p>持续更新，没写多少。<br><a href="string_theory.pdf">下载链接</a></p><embed src="./string_theory.pdf" width="100%" height="900" type="application/pdf">]]></content>
      
      
      <categories>
          
          <category> 量子场论 </category>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 量子场论 </tag>
            
            <tag> conformal </tag>
            
            <tag> string </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电动力学手写笔记</title>
      <link href="/2024/09/06/dian-dong-li-xue-shou-xie-bi-ji/"/>
      <url>/2024/09/06/dian-dong-li-xue-shou-xie-bi-ji/</url>
      
        <content type="html"><![CDATA[<p><a href="电动力学.pdf">下载链接</a></p><embed src="./电动力学.pdf" width="100%" height="900" type="application/pdf">]]></content>
      
      
      <categories>
          
          <category> 电动力学 </category>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电动力学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>理论力学手写笔记</title>
      <link href="/2024/09/06/li-lun-li-xue-shou-xie-bi-ji/"/>
      <url>/2024/09/06/li-lun-li-xue-shou-xie-bi-ji/</url>
      
        <content type="html"><![CDATA[<p><a href="理论力学.pdf">下载链接</a></p><embed src="./理论力学.pdf" width="100%" height="900" type="application/pdf">]]></content>
      
      
      <categories>
          
          <category> 理论力学 </category>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 理论力学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>量子场论手写笔记</title>
      <link href="/2024/06/21/liang-zi-chang-lun-shou-xie-bi-ji/"/>
      <url>/2024/06/21/liang-zi-chang-lun-shou-xie-bi-ji/</url>
      
        <content type="html"><![CDATA[<p>是阅读量子场论时候的手写笔记，一共分为了 5 部分（一个部分传不上去）。上面有杂七杂八的计算….可能意义不大吧。占用了好多空间。不知道 github 有没有对仓库总文件量的限制。——好像是1G。感觉这个手写笔记耗费地方。。。。</p><p><a href="量子场论阅读笔记_1.pdf">下载链接1</a><br><a href="量子场论阅读笔记_2.pdf">下载链接2</a><br><a href="量子场论阅读笔记_3.pdf">下载链接3</a><br><a href="量子场论阅读笔记_4.pdf">下载链接4</a><br><a href="量子场论阅读笔记_5.pdf">下载链接4</a></p><p><embed src="./量子场论阅读笔记_1.pdf" width="100%" height="900" type="application/pdf"></p><p><embed src="./量子场论阅读笔记_2.pdf" width="100%" height="900" type="application/pdf"></p><p><embed src="./量子场论阅读笔记_3.pdf" width="100%" height="900" type="application/pdf"></p><p><embed src="./量子场论阅读笔记_4.pdf" width="100%" height="900" type="application/pdf"></p><embed src="./量子场论阅读笔记_5.pdf" width="100%" height="900" type="application/pdf">]]></content>
      
      
      <categories>
          
          <category> 量子场论 </category>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 量子场论 </tag>
            
            <tag> Greiner </tag>
            
            <tag> Srednicki </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>量子力学手写笔记</title>
      <link href="/2024/06/14/liang-zi-li-xue-shou-xie-bi-ji/"/>
      <url>/2024/06/14/liang-zi-li-xue-shou-xie-bi-ji/</url>
      
        <content type="html"><![CDATA[<p><a href="量子力学4.pdf">下载链接</a></p><embed src="./量子力学4.pdf" width="100%" height="900" type="application/pdf">]]></content>
      
      
      <categories>
          
          <category> 量子力学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 量子力学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>热统手写笔记</title>
      <link href="/2024/06/14/re-tong-shou-xie-bi-ji/"/>
      <url>/2024/06/14/re-tong-shou-xie-bi-ji/</url>
      
        <content type="html"><![CDATA[<p><a href="热统笔记2.pdf">下载链接</a></p><embed src="./热统笔记2.pdf" width="100%" height="900" type="application/pdf">]]></content>
      
      
      <categories>
          
          <category> 热力学与统计力学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 热力学与统计力学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>宇宙学课程笔记</title>
      <link href="/2024/06/12/yu-zhou-xue-ke-cheng-bi-ji/"/>
      <url>/2024/06/12/yu-zhou-xue-ke-cheng-bi-ji/</url>
      
        <content type="html"><![CDATA[<h3 id="宇宙学发展简史"><a href="#宇宙学发展简史" class="headerlink" title="宇宙学发展简史"></a>宇宙学发展简史</h3><p>宇宙学的研究内容</p><ul><li>时间与空间: 1.几何结构$\to$ 平直/弯曲 有限/无限  2.宇宙是静态的or 在演化，演化过程</li><li>宇宙介质: <ol><li>物质(可见：光子，重子物质；不可见：暗物质)</li><li>这些物质在整个宇宙中的比例，如何影响宇宙的演化。</li><li>暗能量应该如何发现，所占的比例，如何影响宇宙的演化。</li><li>物质，能量的占比是否随着时间演化，在空间中如何分布。</li><li>宇宙的物质形式是否变化，恒星与星系如何形成。</li></ol></li></ul><p>宇宙学的特殊性质</p><ol><li>研究对象，宇宙只有一个，只能依靠观测和计算机模拟。</li><li>我们在宇宙中的位置固定。</li><li>宇宙演化过程复杂，牵扯知识广泛。</li></ol><p>宇宙学和天体物理，天文学的关系</p><ul><li>天文学包含宇宙学和天体物理</li><li>天体物理 研究单个或者少量的天体，星系 </li><li>宇宙学研究整个宇宙的行为</li></ul><p>宇宙学简史</p><ol><li><p>初期阶段（健康发展1915-1930）</p><p>1915 Einstein GR</p><p>1918 Einstein 提出第一个宇宙学模型（Einstein 模型）.</p><ol><li>宇宙看作充满全空间的均匀介质。</li><li>宇宙整体上来看静态，引入宇宙学常数$\Lambda$.</li></ol><p>—观测方面</p><p>1920 天文学家发现宇宙膨胀，于是抛弃静态模型</p><p>1923 Slipher 观测十多个漩涡星云，首次发现光谱大部分都有红移现象，也就是星云在远离。同一时期，Hubble发现星云实际上是河外星系。(人们意识到宇宙是以星系分子组成的气体)</p><p>1929 Hubble定律提出，星系退行速度与距离成正比。 $v\propto d$. Hubble 定律不仅说明宇宙在膨胀而是以保持宇宙均匀性的方式膨胀，方式为一。</p><p>—理论方面</p><p>1923 Friedmann 采用不含宇宙学常数的模型，发现宇宙在引力作用下可以膨胀，预言了Hubble 定律。</p></li><li><p>第二阶段（挫折阶段 1930-1960）</p><p>挫折原因:（Mpc是<strong>百万秒差距的意思</strong>）</p><ol><li><p>Hubble 定律$v=H_0d$, 由于$H_0=500km/s/Mpc$, 宇宙年龄：$\frac{1}{H_0}\sim 宇宙年龄\sim 20亿年$。 于是地球有40亿年。 </p><p>Friedmann模型的理论基础: 1.均匀性宇宙2.宇宙演化服从GR</p></li><li><p>反推宇宙有初始时刻</p></li></ol><p>1940 Gamov 提出宇宙演化论, 观点： 一切物质形态都不是更古不变的。</p><p>$\text{The Big Bang}\to\cdots\to 炙热气体\to 元素\to恒星\to星系$</p><p>1950 理论预言10k 左右背景光谱</p><p>1950后期，$H_0\sim 50-100km/s/Mpc$ 解决了宇宙年龄矛盾。</p><p>1965宇宙微波背景辐射被发现$\to$ 重新重视Hubble-Friedmann-Gamov宇宙理论。</p></li><li><p>第三阶段（蓬勃发展1970-现在）</p><p>发现了：</p><ol><li>微波背景的各项异性</li><li>宇宙在加速膨胀—暗能量</li><li>发现引力波</li></ol></li></ol><h3 id="宇宙结构"><a href="#宇宙结构" class="headerlink" title="宇宙结构"></a>宇宙结构</h3><ul><li><p>宇宙中的结构</p><p>宇宙里的结构按照尺度排列：<strong>恒星，星系，星系群（一半十几个星系），星系团，超星系团，宇宙长城，空洞</strong></p><p>星系：大麦哲伦，本群，仙女座星系(与银河系大小相近的最近的星系,770kPC)</p><p>宇宙长城: BOSS Great Wall and Sloan Great Wall.(13.7亿光年)</p><p>星系团： 室女座超星系团（本群所在星系团），发现他属于LANIZKEA super cluster 其中的结构</p><p>空洞： 宇宙长城的带状结构中间的空隙， （他的尺度是 50MPC）</p><ul><li><p>发现: </p><p>1.大尺度均匀： 在100MPC 尺度以上，宇宙可以看作是均匀的。这样一种均匀性的原理叫做宇宙学原理。</p><p>2.其他波段：</p><ul><li><p>微波背景辐射（1950预言 10K CMB）</p><p>观测： 4080MHZ 发现有3.5k 过剩天线温度。测量发现温度是各向同性，非极化，与季节无关。</p><p>公证： 从微波到红外都得相近微波背景辐射。</p><p>确定：1989 COBE 卫星，测量三十多个波段的温度，测量得到$T_{CMB}=2.725\pm 0.004$ </p><p>意义： </p><ol><li>各向同性CMB的存在支撑宇宙学原理。（各向异性$\sim 10^{-5}K$）</li><li>背景辐射谱和heated高度是一致的（说明光谱来自于宇宙早期，因为宇宙形成后，宇宙不再平衡）</li></ol></li><li><p>红外：主要用来探测年轻的星系</p></li><li><p>X射线： 观测星系团中普遍不存在的高温气体。（温度很高，有一千万度）。90% 星系团高温气体不在星系中，在星系与星系的空隙之中。比如后发座星系团</p></li><li><p>射电波：研究氢原子的分布(21cm谱线）</p></li><li><p>其他辐射（相对论性的辐射，如粒子等等）</p><ul><li>如中微子 (与其他粒子相互作用非常弱)，来自于超新星爆发，可以被大型的探测设备检测到</li><li>引力波</li><li>宇宙射线</li><li>未知的其他物质</li></ul></li></ul></li></ul></li></ul><h3 id="共动坐标，哈勃定律，红移"><a href="#共动坐标，哈勃定律，红移" class="headerlink" title="共动坐标，哈勃定律，红移"></a>共动坐标，哈勃定律，红移</h3><ul><li><p>共动坐标引入</p><p>爱因斯坦基本假设：宇宙是均匀的，静态的。</p><p>弗里德曼基本假设：物质分布是均匀的，各向同性的。</p><p><strong>宇宙学原理</strong>：宇宙在大尺度上是均匀的且各向同性。（下面是宇宙学原理的支持实验）</p><ol><li>星系分布的大尺度结构在100MPC的尺度上是均匀的</li><li>CMB观测，早期宇宙(宇宙年龄37万年的时候，从大爆炸开始37万年)几乎是均匀且各向同性的。（有$10^{-5}$各项异性，可以和理论对比）</li></ol><p>Q：一个不断膨胀变化的宇宙，如何保持宇宙学的原理。</p><p>A：宇宙中任何位置的相邻组元（星系或者其他）之间的距离需要按照相同的比例变化，变化的速率可以随时间变，但是需要对任意空间点相同。</p><p>于是可以建立一个相对于整个宇宙都静止的坐标系。比如说r，叫做物理坐标系。在这个坐标系下，宇宙组元之间的距离叫做物理距离。</p><p>当宇宙膨胀时候，组元之间的物理距离是发生变化的。但是由于宇宙原理，任意两组相邻组元间的距离之比始终是一定的。</p><p>因此，还可以引入一个随宇宙不断变化的一个坐标系（共动坐标系） 。同一组元在共动 坐标系中坐标值不变，比如说x</p><p>物理坐标与共动坐标值差一个只与时间t有关的因子。叫做尺度因子$a(t)$.</p><script type="math/tex; mode=display">r(t)=a(t)x</script><p>$a(t)$ 的值代表了t 时刻宇宙的大小。$\dot{a}(t)$代表宇宙演化的速率。</p><p>e.g. 举个例子，两个星系当前的距离是150MpC，在$a=0.1$时候，距离就是15Mpc. a的大小就可以用来宇宙时间的早晚。在接近大爆炸时，$a\to 0$. </p><p>任何组元，观测都是一样的。是宇宙学原理的体现。</p><p>Note：真实的宇宙不是精确的满足宇宙学原理。</p></li><li><p>哈勃定律与宇宙膨胀的理解。</p><p>在物理坐标中,</p><script type="math/tex; mode=display">v(t)=\frac{dr(t)}{dt}=\frac{\dot{a}}{a}(ax)=H(t)r(t)</script><p>Hubble 定理，物理速度与物理距离成正比，比例系数$H(t)$称为哈勃参数。在$t=t_0$时，这个参数叫做哈勃常数。</p><p>宇宙膨胀的含义。</p><ol><li>不意味着身体会变大，应为有化学键</li><li>星系之间，比如太阳和地球，引力占主导，不会收到影响。</li><li>只有在100MpC以上时候，才会感受到宇宙膨胀效应。</li></ol><p>本质原因：通常体系的物质密度远大于宇宙的平均物质密度。内部相互作用力远大于膨胀效应。</p><p>当半径很大时候，$v=Hr$可能大于光速，但是由于Hubble是空间本身的膨胀，于是不会破坏因果性。也不会违背狭义相对论。</p><p>星系间距不容易测量，红移容易测量，</p><p>考虑$\lambda_e$和$\lambda_r$分别是发出和接受到的波长。由于宇宙膨胀，$\lambda_e\neq\lambda_r$. 定义：</p><script type="math/tex; mode=display">\frac{\lambda_r}{\lambda_e}=1+z\quad z>0</script><p>固有距离不变：($r=a(t)x$), </p><script type="math/tex; mode=display">\Delta x=c\int_{t_e}^{t_r}\frac{dt}{a(t)}=\int_{t_e+\frac{\lambda_e}{c}}^{t_r+\frac{\lambda_r}{c}}c\frac{dt}{a(t)}</script><script type="math/tex; mode=display">0=\frac{\lambda_r}{a(t_r)}-\frac{\lambda_e}{a(t_e)}</script><script type="math/tex; mode=display">\frac{\lambda_r}{\lambda_e}=\frac{a(t_r)}{a(t_e)}</script><script type="math/tex; mode=display">z=\frac{1}{a(t)}-1\quad a(t_r)=1</script></li></ul><h3 id="动力学方程"><a href="#动力学方程" class="headerlink" title="动力学方程"></a>动力学方程</h3><p>可以建立一个关于$a(t)$ 和其他宇宙学变量之间的动力学方程。</p><p>这组方程一共有三个。1.Fridman 方程2.流体方程（守恒性方程）3. 物态方程</p><h4 id="Fridman-方程"><a href="#Fridman-方程" class="headerlink" title="Fridman 方程"></a>Fridman 方程</h4><p>  宇宙均匀，球对称分布的质量密度为$\rho(t)$ 的宇宙介质。以球心为坐标原点建立坐标系。在r处有质点m。所以他所受到的引力完全来自于球壳内部的介质。（半径为r内的球内）。球外介质贡献为0。质点受到的引力势能是：</p><script type="math/tex; mode=display">  V=-\frac{GMm}{r}=-\frac{4}{3}\pi r^2G\rho m</script><p>  质点的总能量：</p><script type="math/tex; mode=display">  U=T+V=\frac{1}{2}m\dot{r}^2-\frac{4}{3}\pi r^2G\rho m=Const</script><p>  把$r=a(t)x$ 带入，得到:</p><script type="math/tex; mode=display">  \frac{2U}{ma^2x^2}=(\frac{\dot{a}}{a})^2-\frac{8\pi G}{3}\rho</script><p>  定义：</p><script type="math/tex; mode=display">  \frac{2U}{mx^2}=-kc^2</script><p>  得到F 方程:</p><script type="math/tex; mode=display">  H^2=(\frac{\dot{a}}{a})^2=\frac{8\pi G}{3}\rho-\frac{kc^2}{a^2}</script><p>  常数k的意义：</p><ul><li>F方程的前两项不含x,与x无关。</li><li><p>$k=-\frac{2U}{mc^2x^2}$与t无关，k的量纲是$[长度]^{-2}$ 并且与x,t无关。是空间曲率。</p><p>k大于0，球空间，三角形内角和大于180，圆周长小于$2\pi r$ 宇宙类型是封闭。</p><p>k等于0，平空间，三角形内角和等于180，圆周长等于$2\pi r$ 宇宙类型是平坦。</p><p>k小于0，双曲空间，三角形内角和小雨180，圆周长大于$2\pi r$ 宇宙类型是开放。</p><p>对F方程的讨论。</p></li></ul><ol><li>F方程给出了$H(t)$, $\rho(t)$ 和曲率k三者的关系。对当前$t=t_0$, $a(t_0)=1$时。</li></ol><script type="math/tex; mode=display">  H_0^2=\frac{8\pi G}{3}\rho_0-kc^2</script><ol><li><p>如果:</p><script type="math/tex; mode=display">\rho(t)=\rho_c(t)=\frac{3H^2}{8\pi G}</script><p>则$k=0$。</p><p>$\rho_c$ 称为临界密度（critical），如果$\rho(t)&gt;\rho_c(t)$, k&gt;0. 反之k&lt;0。 </p><p>t可以是任意时刻，对于当前$t_0$, $\rho_c(t_0)=\frac{3H_0^2}{8\pi G}$.</p><p>$H_0=100h\; km/s/Mpc$ 其中 <strong>h 是一个待测的数值。</strong></p><p>$1Mpc=3.0869\times 10^{22}m$, $G=6.67\times 10^{11}m^3/kg/s$ Mpc 中的 M 指 million 百万。pc 指parasec, 秒差距。</p><p>临界密度是 $\rho_c(t_0)=1.88h^2\times 10^{-26}kg/m^3$</p><p>考虑到太阳的质量 $M_\circ=2\times 10^{30}kg$</p><p>$\rho_c(t_0)=2.78 h^2\times 10^{11}M_\circ/Mpc^3$</p><p>宇宙的实际密度与$\rho_c(t_0)$差不多。</p><p>$\rho_c(t)$相当于200L的水里游一个质子。</p><p>k 测量结果大致是0.7。</p></li><li><p>F 方程的另一种写法。</p><script type="math/tex; mode=display">\frac{\rho}{\rho_c}-\frac{kc^2}{a^2H^2}=1</script><p>方程左边两项都和时间相关，（介质密度参数+曲率密度参数=1）($\Omega+\Omega_k=1$) $\Omega=\sum_i\Omega_i$. </p><p>大体上说宇宙介质可以分为三类：</p><ol><li>非相对论物质，静能&gt;（远大于） 势能。</li><li>相对论物质，静能&lt;（远小于） 动能。光子，中微子，宇宙早期高温下的重粒子。</li><li>暗能量，$\rho_\Lambda$, 密度参数用$\Omega_\Lambda$, 具有负压强，能使宇宙加速膨胀。本性尚不明确。</li></ol><h4 id="流体方程"><a href="#流体方程" class="headerlink" title="流体方程"></a>流体方程</h4><p>两点考虑</p></li><li><p>在绝热膨胀成立的尺度上选取任意大小的体积，则净流入和流出该体积的热能必须为0。</p></li><li><p>能量守恒</p><script type="math/tex; mode=display">dE=dQ-pdV=-pdV</script></li></ol><p>  考虑一个<strong>单位半径</strong>的球体，物理体积：</p><script type="math/tex; mode=display">  V=\frac{4}{3}\pi(ax)^3=\frac{4}{3}\pi a^3</script><p>  总质量：$m=\rho V$, 总能量: $E=mc^2=\frac{4}{3}\pi a^3\rho c^2$. </p><p>  该体积内宇宙介质在膨胀过程中满足热力学第一定律。(绝热过程)</p><script type="math/tex; mode=display">  dE=TdS-pdV=-pdV</script><script type="math/tex; mode=display">  \frac{dE}{dt}=\frac{4\pi}{3}(3a^2\frac{da}{dt}\rho c^2+a^3\frac{d\rho}{dt}c^2)</script><script type="math/tex; mode=display">  \frac{dV}{dt}=4\pi a^2\frac{da}{dt}</script><p>  带入得到:</p><script type="math/tex; mode=display">  \dot{\rho}+3\frac{\dot{a}}{a}(\rho+\frac{p}{c^2})=0</script><p>  —导致宇宙介质能量变化的原因：</p><ol><li>宇宙膨胀导致密度降低(括号中的第一项)</li><li><p>体积膨胀，介质通过压强对外做功(括号中的第二项)</p><p>—由于宇宙学原理，宇宙各处压强相等。($p=p(t)$不是x 的函数，不存在压力，因为压强的梯度等于零)</p><p>—目前已经有了两个方程:</p><script type="math/tex; mode=display">H^2=(\frac{\dot{a}}{a})^2=\frac{8\pi G}{3}\rho-\frac{kc^2}{a^2}</script></li></ol><script type="math/tex; mode=display">  \dot{\rho}+3\frac{\dot{a}}{a}(\rho+\frac{p}{c^2})=0</script><p>  得到:</p><script type="math/tex; mode=display">  \frac{\ddot{a}}{a}=-\frac{4}{3}\pi G(\rho+\frac{3p}{c^2})</script><p>  由于$\rho&gt;0$, $p&gt;0$, 理论上宇宙减速膨胀，于是要引入暗物质，导致$p&lt;0$。</p><h4 id="物态方程以及宇宙介质的分类"><a href="#物态方程以及宇宙介质的分类" class="headerlink" title="物态方程以及宇宙介质的分类"></a>物态方程以及宇宙介质的分类</h4><p>  物态方程是关于$p=p(\rho)$. 宇宙学大多数时候考虑最简单的物态方程$p=w\rho c^2$ (0: 非相对论物质，无压物质，尘埃。$\frac{1}{3}$辐射，相对论物质。$-1$真空能或者宇宙学常数)</p><p>  将以上假设带入流体方程:</p><script type="math/tex; mode=display">  \frac{\dot{\rho}}{\rho}=-3(1+w)\frac{\dot{a}}{a}\to\rho(a)\propto a^{-3(1+w)}</script><p>  当得到的$\rho(a)$的关系带入Friedmann方程可以解出$a(t)$.</p><h3 id="宇宙介质"><a href="#宇宙介质" class="headerlink" title="宇宙介质"></a>宇宙介质</h3><p>宇宙介质可以分为三类，$p=\omega \rho c^2$ </p><p>$w=0$ 代表无压物质/非相对论物质/尘埃物质， $w=1/3$代表辐射，$w=-1$ 代表宇宙学常数物质</p><p>现在主要介绍宇宙介质的相关知识。</p><ul><li><p>非相对论物质</p><p>代表： 重子物质</p><p>$宇宙\leftarrow 原子\leftarrow 核子(质子938.3MeV，中子989.6MeV)\leftarrow 夸克$。</p><p>夸克有六种(u,d,s,c,b,t) p=uud, n=udd 。由三个夸克构成的粒子叫做重子。（构成的物质叫做重子物质）。所有重子中只有质子和中子是稳定的。单个中子是不稳定的。原子核内的中子是稳定的。宇宙学中电子也叫做重子物质。</p><p>特征温度</p><script type="math/tex; mode=display">\begin{aligned}mc^2&=k_BT\\k_B&=1.381\times 10^{-23}J/K\\&=8.619\times 10^{-5}eV/K\end{aligned}</script><p>当实际温度远远小于特征温度时候，粒子是非相对论性的。</p><p>重子物质的比例：4/3 H, 1/4 He,其他元素占据的比较少。</p></li><li><p>辐射</p><p>广义辐射指所有相对论性介质(重子物质在早期也视为辐射)。 当前宇宙中的辐射：光子，正反中微子($\nu\;\;\bar{\nu}$)</p><ul><li><p>光子：</p><script type="math/tex; mode=display">m_\gamma=0\quad E=hf=\hbar w=pc</script><p>假设有一盒光子气体，处于平衡态，平衡温度是T。能量密度是</p><script type="math/tex; mode=display">\epsilon(f)df=\frac{8\pi h}{c^3}\frac{f^3}{e^{hf/k_BT}-1}df</script><p>数密度</p><script type="math/tex; mode=display">n(f)df=\frac{\epsilon(f)df}{hf}</script><script type="math/tex; mode=display">x=\frac{hf}{k_BT}</script><p>$f_{n-peak}=2.81k_BT$. </p><p>光子能量密度：</p><script type="math/tex; mode=display">\epsilon_\gamma=\int\epsilon(f)df=\alpha T^4</script><p>光子数密度:</p><script type="math/tex; mode=display">n_\gamma=\beta T^3</script><p>其中:</p><script type="math/tex; mode=display">\alpha=\frac{8\pi k_B^4}{c^3h^3}\frac{\pi^4}{15}=7.565\times 10^{-16}Jm^{-3}k^{-4}</script><script type="math/tex; mode=display">\beta=2.029\times 10^{7}m^{-3}K^{-3}</script><p>一个光子的平均能量:</p><script type="math/tex; mode=display">E_{mean}=\frac{E_{total}}{N}=\frac{\epsilon_r V}{nV}=\frac{\epsilon_r}{n}=2.7k_BT</script></li><li><p>宇宙微波背景辐射</p><p>当前</p><script type="math/tex; mode=display">C_{CMB}=2.7224\pm0.0006K</script><p>能量密度：</p><script type="math/tex; mode=display">\epsilon_{CMB}=0.2606\;MeV/m^3</script><p>质量密度:</p><script type="math/tex; mode=display">\rho_{CMB}=4.639\times 10^{-31}Kg/m^3</script><p>密度参数:</p><script type="math/tex; mode=display">\Omega_{CMB}=\frac{\rho_{CMB,0}}{\rho_{c,0}}\approx 2.47\times 10^{-5}h^{-2}</script><p>Q: CMB的光子和星光的能量谁多。</p><p>A: 当前星系的亮度密度</p><script type="math/tex; mode=display">\Psi=1.7\times 10^8\;L_\circ/Mpc^3\approx 2.2\times 10^{-33}Watt/m^3</script><p>相当于在一个半径为1AU的球内总共30瓦的灯。(1AU是一个天文距离 是149,597,870,700m)</p><p>设所有星系从宇宙之初开始</p><script type="math/tex; mode=display">\epsilon_{starlight}=0.006MeV/m^3</script><p>大约是$\epsilon_{CMB}$的$2.3\%$</p><p>数密度:</p><script type="math/tex; mode=display">n_{CMB}=411个/{cm^3}</script><p>平均能量</p><script type="math/tex; mode=display">E_{mean}=2.7k_BT=6.344\times 10^{-4}eV</script><p>频率:</p><script type="math/tex; mode=display">f=\frac{E_{mean}}{h}=1.534\times 10^{11}Hz\quad \lambda=2mm\;\text{属于微波}</script></li></ul></li></ul><h3 id="中微子"><a href="#中微子" class="headerlink" title="中微子"></a>中微子</h3><p>中微子$\nu$。 中微子$\nu$ 是粒子数仅次于$\gamma$ 的另一种辐射。不放在一起是因为有点长</p><h4 id="1简史"><a href="#1简史" class="headerlink" title=".1简史"></a>.1简史</h4><p>上个世纪初，$\beta$衰变</p><script type="math/tex; mode=display">^{A}_{Z}X\to ^{A}_{Z+1}Y+e^{-}</script><p>通过能量守恒，发现：</p><script type="math/tex; mode=display">E_e=\sqrt{m_e^2+p_e^2}=\frac{m_X^2-m_p^2+m_e^2}{2m_X}</script><p>是一个固定值，但是实际发现，电子的能量测量得到是一个范围：$[0,E_e]$。于是认为还有一个中微子。刚开始是叫做Neutron,。后来Fermi把它叫做Neutrino。</p><p>中微子和物质的相互作用非常的弱，难以探测到。</p><p>质疑</p><ul><li><p>1950，Cowan 和Reines用核反应产生大量的$\bar{\nu}$.用两百升的大水箱作为质子靶标来发生</p><script type="math/tex; mode=display">p+\bar{\nu}\to n+e^{+}</script><p>产生的正电子和负电子发生湮灭，发出光子。给出了首个中微子存在的证据。</p><p>中微子的产生速率：</p><script type="math/tex; mode=display">10^{13}\text{ 个}/cm^2/s</script><p>但是正电子的产生速率是</p><script type="math/tex; mode=display">2\sim3\text{ 个}/小时</script></li><li><p>1962年，Lederman, Schwartz, Steinberger 在Brookhaven 实验室用$\pi^-$粒子产生 的反中微子作为源。有反应：</p><script type="math/tex; mode=display">\bar{\nu}+p^+\to n+\mu^+</script><p>其中$\mu$子在很多方面和电子有很多相似性。</p><p>也应该能看到反应:</p><script type="math/tex; mode=display">\bar{\nu}+p^+\to n+e^+</script><p>但是下面的反应没有发生，于是有两种中微子:</p><script type="math/tex; mode=display">\nu_e\quad \nu_\mu</script></li><li><p>1970 年 Perl 发现一种新的电子和$\mu$ 子相似的粒子，叫做$\tau$子。于是认为可能有$\nu_\tau$</p></li><li><p>2000 Donut 和 Fermilab 发现了这个粒子</p></li></ul><p>粒子$e\mu\tau\;\;\nu_e\;\nu_\tau\;\nu_\mu$ 这些粒子和它们的反粒子统称为 轻子。</p><p>Q： 有无更多的轻子？</p><p>1989年，在LEP，通过测量z 玻色子的衰变发现结论: 只产生了三个轻子。</p><p>实验不排除一些情况。</p><p>1.第四代中微子&gt;$\frac{m_Z}{2}$。</p><p>2.可能存在不参与弱相互作用的中微子。</p><h4 id="2-中微子振荡"><a href="#2-中微子振荡" class="headerlink" title=".2 中微子振荡"></a>.2 中微子振荡</h4><p>1920年 爱丁顿注意到 4个H 比一个He 重，说明有可能氢原子聚变成He，这个过程会放出能量。</p><p>1938年，Hans Bethe 研究了太阳聚变的一些细节。发现在太阳这种H的恒星重是以PP链的方式发生反应。</p><p>PP 链主要有四个步骤。</p><ol><li>2p反映成氚。</li><li>氘和P反应成氦3</li><li>氦3和质子反应生成氦4</li><li>氦4和Li反应生成Be，B。</li></ol><p>1968 Ray Davis 利用巨型的氯罐在一个矿井下面探测太阳中微子。应该有这样的反应：</p><script type="math/tex; mode=display">\nu_e+Cl\to Ar+ e^-</script><p>经过几个月的收集，发现大约每两天能够产生一个Ar原子。Ar 原子的个数可以和标准的太阳的模型相互验证。</p><p>收集到的Ar是理论预言的 $\frac{1}{3}$.</p><p>Bruno Pontecorov给出了太阳中微子的理论解释。在传播过程中，中微子的味道发生了变化。  电子中微子变成了$\mu$中微子，这种味道会发生的连续变化叫做中微子振荡。原因：</p><script type="math/tex; mode=display">|\Psi(t)\rangle=e^{-iEt/\hbar}|\Psi(0)\rangle</script><p>初态是不同能量本征态的线性叠加。能量本征态随着时间的变化如上面所示，所以最后得到的态是随着时间震荡的。</p><p>一个电子中微子演化t时间后变化为$\mu$中微子的概率</p><script type="math/tex; mode=display">P=[sin(2\theta)\sin(\frac{E_e-E_\nu}{2}t)]^2</script><p>中微子的质量不可能全为零。</p><script type="math/tex; mode=display">E_i=pc(1+\frac{1}{2}\frac{m_i^2c^2}{p^2})</script><script type="math/tex; mode=display">P=[sin(2\theta)\sin(\frac{\Delta m^2 L c^2}{4E})]^2</script><h4 id="续-：宇宙中微子"><a href="#续-：宇宙中微子" class="headerlink" title="续 ：宇宙中微子"></a>续 ：宇宙中微子</h4><p>宇宙中可能有与CMB类似的C$\nu$B,<br>理论预言：$T_{C\nu B,0}=1.96K, n_{C\nu B,0}=336/cm^3 (c_{CMB,0}=411/cm^3)$<br>若 $m_{\nu}=0 \Rightarrow \Omega_{C\nu B,0}=0.681\Omega_{CMB,0}$<br>当前 $\Omega_{rad,0}=\Omega_{CMB,0}+\Omega_{CMB,0}=4.15\cdot 10^{-5}h^{-2}\ll 1$<br>对C $\nu$ B直接观测：PTOLEMY, 国内有江门、上交的海铃计划</p><h4 id="第8讲开头"><a href="#第8讲开头" class="headerlink" title="第8讲开头"></a>第8讲开头</h4><p>加速or减速？<br>减速因子 $q=-\frac{\ddot{a}a}{\dot{a}^2}=-\frac{\ddot{a}}{aH^2}$<br>1990年代，由Perlmutter超新星宇宙学项目(SCP)和由Schmidt和Riess High-Z Supernova Search team对大量（几十个）的Ia型超新星（简写为SNIa，这里是罗马数字I）的红移和光通量测量，发现 $q_{0}<0$，即 $\ddot{a}>0$ 的证据<br>其他独立观测（CMB,星系形成）$\Rightarrow$ 有某种 $p&lt;0$ 的组份<br>2011，诺奖<br>How &amp; Why SNIa $\Rightarrow$ DE?</p><h4 id="8-1-SN1a与光度距离"><a href="#8-1-SN1a与光度距离" class="headerlink" title="8.1 SN1a与光度距离"></a>8.1 SN1a与光度距离</h4><p>根据光谱中有无氯吸收线 $\Rightarrow$ I型（无），II型（有）<br>I型中有两类（？）Ia型 $\Rightarrow$ 爆发机制（白矮星吸积其伴星上的物质，当其自身质量达到钱德拉塞卡极限 $M \sim 1.44M_\odot$ 后 $\rightarrow$ 爆炸，炸后不形成BH、中子星）<br>SNIa 非常亮，峰值光度（单位时间发出的能量）$L\approx (3\sim 5)\times 10^{9}L_{\odot}$，在 $z\sim 1$ 也能看到<br>$\Rightarrow$ 光度大致相同，可作为光度已知的天体，称为标准烛光，从而得到距离<br>光学：已知光度 $L$, 在距离 $d$ 处测光通量（单位时间单位面积接收的光能）$F=\frac{L}{4\pi d^2}$，因此，知道 $L$ +测出 $F$ 就可以知道 $d$. （Note: 这里没有考虑朝向）<br>光速有限，光发出到接收需要时间，这段时间内宇宙会膨胀，因此通过 $d_{L}^2=\frac{L}{4\pi F}$ 推出的距离称为光度距离 $\neq$ 物理距离</p><h4 id="8-2-光度距离与物理距离的关系"><a href="#8-2-光度距离与物理距离的关系" class="headerlink" title="8.2 光度距离与物理距离的关系"></a>8.2 光度距离与物理距离的关系</h4><p>Recall 共动距离是不变的，光在 $dt$ 时间内走过的共动距离为 $dx=c \cdot \frac{dt}{a(t)}$<br>设SNIa在 $t_{e}$ 和 $t_{e}+\frac{\lambda e}{c}$ 时刻发出光子，地球上接收时间为 $t_{r}$ 和 $t_{r}+\frac{\lambda r}{c}$,有</p><script type="math/tex; mode=display">\int^{t_{e}+\frac{\lambda e}{c}}_{t_{e}} \frac{dt}{a(t)}= \int^{t_{r}+\frac{\lambda r}{c}}_{t_{r}} \frac{dt}{a(t)}</script><script type="math/tex; mode=display">\frac{\lambda e}{a(t_{e})}=\frac{\lambda r}{a(t_{r})} \Rightarrow \frac{\lambda r}{\lambda e}=\frac{a(t_{r})}{a(t_{e})}=1+z</script><script type="math/tex; mode=display">t_{r}=t_{0}, a(t_{0})=1 \Rightarrow \frac{1}{a(t)}=1+z</script><p>膨胀 $a(t_{r})&gt;a(t_{e})\Rightarrow z&gt;0$，SN发出的光波长变长，$\lambda_{r}=(1+z)\lambda_{e}\Rightarrow E_{r}=(1+z)^{-1}E_e$ 变小，频率 $f_{r}=f_{e}(1+z)^{-1}$ 变小，导致光通量不同于宇宙静止时。<br>设SNIa在 $t_{e}\sim t_{e}+\Delta t_{e}$ 各向同性，发出N个频率 $f_{e}$ 的光子，光度为 $L=\frac{Nhf_{e}}{\Delta t_{e}}$. 设我们再 $t_{0}$ 时收到这些光子，SN与我们的物理距离为 $r$, 收到的光通量 $F=\frac{Nhf_{r}}{4\pi r^2\Delta t_{r}}$，膨胀 $\Rightarrow f_{r}=f_{e}(1+z)^{-1}$ 变小，$\Delta t_{r}=\Delta t_{e}(1+z)$ 变长，从而</p><script type="math/tex; mode=display">\frac{L}{F}=4\pi r^2(1+z)^2=4\pi d_{L}^2 \Leftarrow d_{L}=r(1+z)</script><p>在当前时刻，$r=x=c\int _{t_{e}}^{t_{0}} \frac{dt}{a(t)}, r(t_{e})\rightarrow r(z)$, 由关系 $z=\frac{1}{a}-1\Rightarrow \frac{dz}{dt}=-\frac{\dot{a}}{a^2}\Rightarrow \frac{dt}{a(t)}=-\frac{dz}{H}, r(t_{e})\rightarrow r(z)=\int _{0}^z \frac{cdz}{H(z)}$<br>出发点：F方程</p><script type="math/tex; mode=display">H^2=\frac{8\pi G}{3}(\rho_{mat}+\rho_{rad}+\rho_{\Lambda})-\frac{kc^2}{a^2},</script><p>由于 $\rho_{mat}=\rho_{mat,0}\cdot a^{-3}, \rho_{rad}=\rho_{rad,0}\cdot a^{-4}, \rho_{\Lambda}=const, a=(1+z)^{-1}$，有 </p><script type="math/tex; mode=display">\begin{aligned}H^2&=H_{0}^2 \frac{8\pi G}{3H_{0}^2}[\rho_{mat,0}(1+z)^3+\rho_{rad,0}(1+z)^4+\rho_{\Lambda}+\rho_{K}(1+z)^2]\\&=H_{0}^2[\Omega_{mat,0}(1+z)^3+\Omega_{rad,0}(1+z)^4+\Omega_{\Lambda,0}+\Omega_{K,0}(1+z)^2]\end{aligned}</script><p>对SNIa，</p><script type="math/tex; mode=display">z\sim 1,\quad \Omega_{rad,0},\Omega_{K,0}\ll 1 \Rightarrow \Omega_{mat,0}+\Omega_{\Lambda,0}\approx 1 \Rightarrow \frac{d_{L}H_{0}}{c}=\int _{0}^z \frac{dz'}{[(1-\Omega_{\Lambda,0})(1+z')^3+\Omega_{\Lambda,0}]^{1/2}}</script><p>+附图1</p><p>测试2第一题</p><h4 id="8-3-DE的其他性质"><a href="#8-3-DE的其他性质" class="headerlink" title="8.3 DE的其他性质"></a>8.3 DE的其他性质</h4><p>$t_{0}$ 时，F方程的另一种写法</p><script type="math/tex; mode=display">\Omega_{mat,0}+\Omega_{rad,0}+\Omega_{\Lambda,0}+\Omega_{K,0}=1</script><p>认为 $\Omega_{rad}\approx 0$, 以 $\Omega_{mat,0},\Omega_{\Lambda,0}$ 为变量构造一个二维平面参数空间，存在几条分界线+附图2</p><ul><li><p>当 $\Omega_{K,0}=0$ 时，$\Omega_{\Lambda,0}=1-\Omega_{mat,0}$，线下方 $\Omega_{mat,0}+\Omega_{\Lambda,0}<1, \Omega_{K,0}>0, \Omega_{K}\equiv -\frac{kc^2}{a^2H^2}\Rightarrow K&lt;0$</p></li><li><p>F方程两边同乘 $a^2\rightarrow \dot{a}^2=\frac{8\pi G}{3}a^2[\rho_{mat}+\rho_{rad}+\rho_{\Lambda}]-Kc^2$，求 $t$ 的导数，代入 $\dot{\rho}_{mat}=-\frac{3\dot{a}}{a}\rho_{mat}, \dot{\rho}_{rad}=-\frac{4\dot{a}}{a}\rho_{rad},\dot{\rho}_{\Lambda}=0$，整理后有 ($q=-\frac{\ddot{a}}{a}\frac{1}{H^2}$)</p><script type="math/tex; mode=display">q=-\Omega_{\Lambda}+\frac{\Omega_{mat}}{2}+\Omega_{rad}</script><p>当前 $\Omega_{rad,0}\approx 0\Rightarrow q_{0}=\frac{\Omega_{mat,0}}{2}-\Omega_{\Lambda,0}$</p><p>测试2第一题</p></li><li><p>另两类分类（仅了解）$\Rightarrow \Omega_{mat,0}\approx 0.3, \Omega_{\Lambda,0}\approx 0.7$<br>结论：</p></li><li><p>空间曲率k近似为0</p></li><li><p>当前宇宙在做加速膨胀, $q_{0}=\frac{0.3}{2}-0.7\approx -0.55$</p></li><li><p>有BB（Big Bang?），持续膨胀下去<br>$\Lambda CDM$ 模型</p></li></ul><h3 id="第九讲-暗物质简介"><a href="#第九讲-暗物质简介" class="headerlink" title="第九讲 暗物质简介"></a>第九讲 暗物质简介</h3><h4 id="9-1可见重子物质"><a href="#9-1可见重子物质" class="headerlink" title="9.1可见重子物质"></a>9.1可见重子物质</h4><p>太阳，V 波段 $\lambda\in[500,590]$ nm. 在这个波段中，光度，单位时间中辐射出的能量</p><script type="math/tex; mode=display">L_{\circ,V}\approx 0.12 \times L_\circ =4.6\times 10^{25} Watts</script><p>太阳的质光比: 定义为太阳的质量除以太阳的辐射能量=$\frac{1M_\circ}{1L_{\circ,V}}=43 吨/Watts$</p><p>恒星的质光比不完全相同。</p><p>恒星分为三种 巨星，主序星，矮星  按照质量从小到大，可以分成 M,K,G,F。</p><p> M质量大约是0.1个太阳质量，$L_V\approx 5\times 10^{-5}L_{\circ V}$ ，他的质光比是太阳的2000倍。</p><p> O 型大约是 60个太阳质量， $L_V\approx 2\times 10^{4}L_{\circ V}$，他的质光比是太阳的0.003倍。 </p><p>如果质量小于0.08个太阳质量，存在一些球状的天体，可以视为是气状的球。它们基本上不发光，很难通过这种光的方法来观察他，比如说赫尔星。</p><p>一般来说一个星系中，产生的行星中各种行星的产生率的比率确定，产生O星与M星的比例是250:1 。 并且O星的寿命是比较短的。比如说时间久了它就会以二型超星星爆发的形式消失了。</p><p>在年轻的星系中$\frac{M}{L_V}\approx 0.3 \frac{M_\circ}{L_{\circ,V}}$。 对于成年一些的星系，他的质光比大约是$8\frac{M_\circ}{L_{\circ,V}}$。 平均下来，一般认为恒星的质光比是$4\frac{M_\circ}{L_{\circ,V}}$</p><p>星系的平均光度密度</p><script type="math/tex; mode=display">\Psi=1.1\times 10^8 L_{\circ,V}/Mpc^3</script><p>可以算出恒星物质的质量密度:</p><script type="math/tex; mode=display">\rho_{*}=<\frac{M}{L_V}>\Psi_V\approx 4\times 10^8 \frac{M_\circ}{Mpc^3}</script><p>按照这个质量密度</p><script type="math/tex; mode=display">\Omega_{*,O}\approx 0.003</script><p>于是他只贡献重子物质的0.01。</p><p>除了恒星，重子物质还可以以其他形式存在，比如星际气体。比如说M31中，星际气体为恒星质量的20 %。 在麦哲伦星云中，星际气体的占比更高。 </p><p>星系间气体： Coma Cluster $\sim$ 100Mpc。</p><p>最亮的星系是</p><script type="math/tex; mode=display">L_V\approx 2.5\times 10^{11}L_{\circ,V}</script><p>他是远大于其他星系的，星系的总的光度是：</p><script type="math/tex; mode=display">L_{Comma,V}=5\times 10^{12}L_{\circ,V}</script><p>于是</p><script type="math/tex; mode=display">M_{comma,*}\approx 2\times 10^{13}M_\circ</script><p>而X射线法，大量高温气体，$T\sim 10^8k$, $E\sim 9KeV$. 用流体静力学的方法算出质量。</p><script type="math/tex; mode=display">M_{comma,gas}\sim 2\times 10^{14} M_\circ</script><p>不可见的重子物质，可以用引力透镜的方法测量。星际气体和cluster之外的空洞，..这种不可见的重子物质占比是更多的。</p><h4 id="9-2-星系中的暗物质"><a href="#9-2-星系中的暗物质" class="headerlink" title="9.2 星系中的暗物质"></a>9.2 星系中的暗物质</h4><p>一个例子： 研究漩涡星系的旋转曲线。有扁平的星盘。恒星是绕着中心旋转的。</p><p>一般来讲，向心加速度：</p><script type="math/tex; mode=display">a=\frac{v^2}{R}=\frac{GM}{R^2}</script><p>于是可以算出质量M。</p><script type="math/tex; mode=display">v=\sqrt{\frac{GM}{R}}</script><p>星盘上的亮度</p><script type="math/tex; mode=display">I(R)=I(0)e^{-R/R_0}</script><p>特征半径， $R_S\sim Kpc$。当离星系中心很远的时候，可以认为$M$ 就是一个常数了。就是说如果认为星系质量主要来自于恒星，那么气体大约是20%。于是理论预言:</p><script type="math/tex; mode=display">v\sim \frac{1}{\sqrt{R}}</script><p>但是实际观测旋转曲线时候，$4R_s&lt;R&lt;6R_s$时， $V(R)\sim 230km/s$大约是一个常数。</p><p>于是认为星系中有暗物质，它们以暗晕的形式存在。 比如说银河系中$R_{halo}=15kpc$。</p><p>星系团中也有暗物质。星系的径向速度有很大的disporsion。不同星系在径向的平均相对速度是$880km/s$。因为这个相对速度非常快，所以认为已知可见的星系和气体不足以使得星系聚集在这个comma cluster中。</p><p>考虑一个模型， 有N个星系，质量是m，</p><p>动能：</p><script type="math/tex; mode=display">K=\frac{1}{2}M<v^2></script><p>势能:</p><script type="math/tex; mode=display">W=-\alpha\frac{GM^2}{r_h}</script><p>其中的$r_h$叫做半质量半径。转动惯量:</p><script type="math/tex; mode=display">I=\sum_i m_i |x_i|^2</script><p>位力定理:</p><script type="math/tex; mode=display">\ddot{I}=2W+4K</script><p>对于稳态</p><script type="math/tex; mode=display">K=-\frac{W}{2}</script><p>于是</p><script type="math/tex; mode=display">M=\frac{<v^2>r_h}{\alpha G}</script><p>计算得到$<v^2>\sim 2.32 \times10^{12}m/s$。假设沿着半径质量比是常数</p><script type="math/tex; mode=display">r_h=1.5Mpc</script><p>计算得到总质量$M_{comma}=2\times 10^{15}M_\circ$。 于是可见物质只占有10%</p><p>可以定出重子物质占有的比例是当前宇宙的$4\%\sim 5\%$</p><h4 id="9-4引力透镜"><a href="#9-4引力透镜" class="headerlink" title="9.4引力透镜"></a>9.4引力透镜</h4><p>MACHO （大质量 致密晕状天体）。 褐矮星，冷白矮星，黑洞。</p><p>原理: MACHO 引力使得光线偏转。</p><script type="math/tex; mode=display">\alpha=\frac{4GM}{c^2b}</script><p>当观测别的天体时候，如果路径上有MACHO，那么，看到的是一个圆环，他的角半径：</p><script type="math/tex; mode=display">\theta=(\frac{4GM}{c^2d}\frac{1-x}{x})^{1/2}</script><p>d 代表地球到观测天体的距离。 xd 是地球到MACHO的距离。 </p><p>如果没有在连线上，观测到的是一些弧。</p><p>但是MACHOS最多占有晕的8%, 别的就是暗物质。</p><h3 id="11-17-宇宙学—暗物质II"><a href="#11-17-宇宙学—暗物质II" class="headerlink" title="11.17 宇宙学—暗物质II"></a>11.17 宇宙学—暗物质II</h3><h4 id="课前提问"><a href="#课前提问" class="headerlink" title="课前提问"></a>课前提问</h4><p>什么叫做星系旋转曲线，横坐标是什么，纵坐标是什么。</p><p>答：横坐标是R,纵坐标是v。星系有一些旋臂，上面有一些恒星，横坐标就是距离星系中心的半径R。纵坐标就是v。如果引力全部来自于发光物质，当半径大到一定程度，半径以内的物质质量就是常数，于是$v\sim \frac{1}{\sqrt{R}}$。 这是认为只有发光物质。但是实际测量得到$v\sim const$ 。这个事情说明不只有发光物质，就是暗物质。</p><p>另一种方法：</p><p>根据位力定理</p><script type="math/tex; mode=display">\ddot{I}=2W+4K</script><p>对于稳态，</p><script type="math/tex; mode=display">K=-\frac{W}{2}</script><script type="math/tex; mode=display">W=-\alpha\frac{GM^2}{r_h}</script><script type="math/tex; mode=display">K=\frac{1}{2}M<v^2></script><p>于是</p><script type="math/tex; mode=display">M=\frac{<v^2>r_h}{\alpha G}</script><p>测量得到总质量远大于可见物质的质量。</p><h3 id="DM-的本质"><a href="#DM-的本质" class="headerlink" title="DM 的本质"></a>DM 的本质</h3><ul><li><p>问题： 能不能通过修改引力理论来得到暗物质。</p><p>2006年 Clowe等人通过研究子弹星系团bullet cluster。得到了暗物质存在的最佳证据。（否定了修改引力）。</p><p>BUllet Cluster： 通过两个星系团碰撞产生。每个星系团中有发光物质，高温气体，暗物质。</p><p>首先通过X射线望远镜，观察Bullet cluster中高温气体的分布。发现高温气体分布在两个区域。（两个中心）</p><p>回顾一下引力透镜，他的意义在于可以用来探测不发光的天体。</p><p>用引力透镜的方法，可以观察Bullet cluster中物质的分布。观测结果是分布和X射线观测得到的高温气体分布是不一样的。并且他们的质量比例是：</p><script type="math/tex; mode=display">M_{星}:M_{气}:M_{总}=1:10:70</script><p>（根据图片—）蓝色的是暗物质，亮点是星系，红色是高温气体。</p><p>说明：</p><ul><li>暗物质和其他重子物质相互作用非常弱。（如图，红色部分的重子物质相互作用比较大） </li><li>暗物质是真实存在的物质。</li></ul><p><img src="pic/1700208109336.jpg" alt="1700208109336"></p></li><li><p>DM问题： 很多研究表明宇宙中存在大量于其他物质相互作用很弱，从而很难被探测到或者看到的物质。这样的物质就是暗物质。问题是这些物质本质是什么。</p><p>需要注意的是暗物质并不一定只有一种。</p></li><li><p>暗物质的候选者。有已知存在的比如中微子$\nu$。大多数暗物质候选者是理论假设或者预言的。目前的主流观点大概可以分成两大类。</p><ol><li><p>基本粒子说：暗物质候选者都是一些相互作用很弱的基本粒子。</p><p>a. 中微子。宇宙中中微子的粒子数密度大约是$n_\nu=3.36\times 10^8\;m^{-3}$。在标准模型中中微子是没有质量的，但是震荡现象说明$m_\nu\neq 0$。这个事情可以解释一部分暗物质。假设$\nu$构成了全部的暗物质。通过质量密度,要求$\Omega{\nu,0}=\Omega_{dm,0}=0.262$. </p><script type="math/tex; mode=display">\Omega_{\nu,0}=\frac{\rho_{\nu,0}}{\rho_{c,0}}=\frac{n_\nu\bar{m}_\nu}{\rho_{c,0}}=0.262</script><p>于是</p><script type="math/tex; mode=display">\bar{m}_\nu c^2=0.262\times 4870MeV/m^3\frac{1}{3.36\times 10^8\;m^{-3}}=3.8eV</script><p>这种轻质量的中微子是属于热暗物质。（指在宇宙的某一个阶段是相对论性的）。</p><p>存在的问题问题：不能解释宇宙大尺度结构的形成。要解释大尺度结构的形成，需要对热暗物质的上限有要求(hdm 是hot dark matter)</p><script type="math/tex; mode=display">\Omega_{hdm}\leq 0.007</script><p>相当于要求</p><script type="math/tex; mode=display">\bar{m}_\nu c^2\leq0.007\times 4870MeV/m^3\frac{1}{3.36\times 10^8\;m^{-3}}=0.1eV</script><p>这个也被称作是中微子质量上限。</p><p>于是中微子只能解释一部分暗物质：</p><script type="math/tex; mode=display">\frac{\Omega_{\nu,0}}{\Omega_{dm}}\approx \frac{\Omega_{hdm,0}}{\Omega_{dm,0}}<3\%</script><p>于是说要一些超出标准模型的理论。Beyond Standard Model</p></li></ol></li></ul><pre><code> b. 超对称，特点：把标准模型的基本粒子基本都复制了一份。比如说把光子对应于超对称伴子photon$\to$photino, 电子$\to$ Selection  有一些最轻的超对称粒子，他们是稳定不衰变的lighest Supersymmetry Particle (LSP).他们是暗物质的候选者。  LSP 是WIMP (Weak Interacting Massive Particles)。这些是指只参与引力和弱相互作用。和中微子类似。但是质量远高于中微子的质量上限0.1eV。 但是至今是没有结果的。于是目标是另一种粒子（轴子Axion）。这种粒子有好处： $m_&#123;ax&#125;\sim 10^&#123;-5&#125;eV$。 好处在于可以同时解决DM问题和强相互作用中的CP问题。轴子会修改Maxwell理论。在强电磁环境下，轴子会转化为微波频段的光子。实验上用超导高频腔探测。但是目前也没有发现。但是在CM里面，轴子可以作为某些特殊材料的准粒子态出现。（比如说强拓扑绝缘体Nature Reviews Physics 2, 2020, p 682）。</code></pre><ol><li><p>致密天体说。MACHOs</p><p>a. 原初黑洞：是在宇宙早期形成的黑洞。而不是通过恒星的死亡。可以是重子物质构成。需要早于核合成。(躲避$\Omega_{B,0}\approx 0.05$的限制)</p><p>b. MACHOs</p></li></ol><p>已经了解了当前宇宙中物质的组成和所占的比例。</p><h4 id="宇宙年龄"><a href="#宇宙年龄" class="headerlink" title="宇宙年龄"></a>宇宙年龄</h4><p>通过F方程：</p><script type="math/tex; mode=display">(\frac{\dot{a}}{a})^2=\frac{8\pi G}{3}\rho_{tot}</script><p>其中</p><script type="math/tex; mode=display">\rho_{tot}=\rho_{mat,0}a^{-3}+\rho_{rad,0}a^{-4}+\rho_{\Lambda,0}+\rho_{K,0}a^{-2}</script><p>在方程的两端同时乘以$\frac{a^2}{H_0^2}$ 于是 $\rho_{c,0}=\frac{3H_0^2}{8\pi G}$</p><script type="math/tex; mode=display">\frac{da}{dt}=H_0\sqrt{\Omega_{mat,0}a^{-1}+\Omega_{rad,0}a^{-2}+\Omega_{\Lambda,0}a^{2}+\Omega_{K,0}}</script><p>考虑到</p><script type="math/tex; mode=display">\Omega_{rad,0},\Omega_{K,0}<<1,\;\;\Omega_{mat,0}\approx 1-\Omega_{\Lambda,0}\approx 0.31</script><script type="math/tex; mode=display">\int_0^{t_0}dt=t_0\approx\int_0^1\frac{da}{H_0\sqrt{\Omega_{mat,0}a^{-1}+(1-\Omega_{mat,0})a^2}}</script><p>对a积分得到：</p><script type="math/tex; mode=display">t_0=\frac{0.955}{H_0}=0.955t_H</script><p>带入$H_0=68km/s/Mpc$, 其中$1Mpc=3.068\times 10^{22}m$于是 $t_H=144亿年$， 于是宇宙年龄：</p><script type="math/tex; mode=display">t_0\approx137.4亿年</script><p>地质学说: 地球年龄是50亿年。</p><p>核年代学：星系盘中的铀 100亿年。</p><p>古老球状星团： 100-130亿年</p><h4 id="宇宙可观测半径"><a href="#宇宙可观测半径" class="headerlink" title="宇宙可观测半径"></a>宇宙可观测半径</h4><p>光速有限，$t_0$有限，可见宇宙也是有限的。粒子视界半径：指的是在$t=0$时，发出的光子在$t_0$时被接收到，这个时间段中光走过的物理距离。（固有距离）</p><p>光子在$t_e\to t_r$内走过的共动距离。</p><p>$x=c\int_{t_e}^{t_r}\frac{dt}{a(t)}\;\;\; a(t_0)=1$</p><p>当前宇宙的视界半径：</p><script type="math/tex; mode=display">d_H=c\int_0^{t_0}\frac{dt}{a(t)}</script><p>由于：</p><script type="math/tex; mode=display">z=\frac{1}{a(t)}-1\to \frac{dz}{dt}=-\frac{\dot{a}}{a^2}=-\frac{\dot{a}}{a}\frac{1}{a}</script><script type="math/tex; mode=display">\frac{dt}{a}=-\frac{dz}{H}</script><script type="math/tex; mode=display">d_h=c \int_{0}^{+\infty}\frac{dz'}{H(z')}</script><p>由H 方程： 并且：$a^{-3}=(1+z)^3$, $\Omega_{\Lambda,0}=1-\Omega_{mat,0}$</p><script type="math/tex; mode=display">H=H_0\sqrt{\Omega_{mat,0}(1+z)^3+(1-\Omega_{mat,0})}</script><p>于是</p><script type="math/tex; mode=display">d_h\approx c t_H 3.2=14000Mpc</script><p>实际上，我们看到的最远的星系，$z\approx10$，于是物理距离：</p><script type="math/tex; mode=display">ct_H\int_0^{10}\frac{dz'}{\sqrt{\cdots}}\approx 2.18ct_H=9500Mpc=\frac{2}{3}d_H</script><h3 id="11-24-上课-第十一讲早期宇宙基础"><a href="#11-24-上课-第十一讲早期宇宙基础" class="headerlink" title="11.24 上课  第十一讲早期宇宙基础"></a>11.24 上课  第十一讲早期宇宙基础</h3><h4 id="11-2变化的量"><a href="#11-2变化的量" class="headerlink" title="11.2变化的量"></a>11.2变化的量</h4><p>尺度因子 $a(t)$ ，物理距离（固有距离）无法测量。可以测量发光天体的红移z。红移和尺度因子之间有关系</p><script type="math/tex; mode=display">z=\frac{1}{a(t)}-1=\frac{a(t_0)}{a(t)}-1</script><p>常常将红移作为宇宙演化的主要变量。已知红移的大小可以知道发光天体的很多性质。</p><ol><li><p>红移z对应的宇宙年龄。($a(t)$中的  t  是多大，也就是发光时候的宇宙年龄是多少。)或者理解为时间坐标，坐标的原点就是大爆炸发生的时候(t=0)。</p><p>求导得到：</p><script type="math/tex; mode=display">\frac{dt}{a}=-\frac{dz}{H}\\dt=-\frac{dz}{H}a\\dt=-\frac{dz}{H}(1+z)^{-1}\\\int_0^{t_e}dt=\int_z^{+\infty}\frac{dz}{1+z}\frac{1}{H}</script><p>其中，z是测量得到的红移值，$+\infty$是在宇宙大爆炸时的红移值。</p></li><li><p>已知红移，还可以计算与z相关的距离。一个是发光体和我们之间的共动距离，</p><script type="math/tex; mode=display">d_p=\int_{t_e}^{t_r}c\frac{dt}{a(t)}=c\int^{z}_0\frac{dz'}{H}</script><p>当前时刻的共动距离 = 当前时刻的物理距离</p><p>二是红移z对应的视界半径。</p><script type="math/tex; mode=display">d_h(z)=c\int_{t=0}^{t_e}\frac{dt}{a(t)}=c\int_z^{\infty}\frac{dz'}{H}</script><p>上面的计算中需要用到哈勃参数，考虑F方程。</p><script type="math/tex; mode=display">H=H_0\sqrt{\Omega_{mat,0}(1+z)^3+\Omega_{rad,0}(1+z)^4+\Omega_{\Lambda,0}+\Omega_{k,0}(1+z)^2}</script><p>当前时刻：</p><script type="math/tex; mode=display">\Omega_{mat,0}+\Omega_{rad,0}+\Omega_{\Lambda,0}+\Omega_{k,0}=1</script><p>其中: </p><script type="math/tex; mode=display">\Omega_{\Lambda,0}=0.69\;\; \Omega_{k,0}=1-\Omega_{\Lambda,0}-\Omega_{mat,0}-\Omega_{rad,0}</script><p>在早期宇宙(z很大)，演化为辐射主导，这时候不能够忽略辐射项。</p><p>利用$\rho_{rad}=\rho_{rad,0}a^{-4}$  $\rho_{mat}=\rho_{mat,0}a^{-3}$  $\rho_\Lambda=常数$ 可以得到两个重要时刻：</p><ol><li>辐射-物质等量：<script type="math/tex; mode=display">\rho_{rad,0}a^{-4}_{rm}=\rho_{mat,0}a^{-3}</script>$a_{rm}\sim 2.9\times 10^{-4}$    $z_{rm}=\frac{1}{a_{rm}}-1\approx 3443$, 实际上现在接收到的最大的红移值是10 左右。$t_{rm}\approx 5万年$  世界半径： $d_h(t_{rm})=112Mpc$。$d_h(t_0)=14000Mpc$. 两者的比例大约是125.</li></ol></li></ol><ol><li>物质和暗能量等量期。<script type="math/tex; mode=display">\rho_{mat}(a_{m\Lambda})=\rho_{\Lambda}\Rightarrow a_{m\Lambda}=(\frac{\Omega_{mat,0}}{\Omega_{\Lambda,0}})^{1/3}=0.77</script>，当时宇宙是现在宇宙的77%。$z_{m\Lambda}=0.3$  $t_{m\Lambda}=101亿年$，（现在的30亿年前），视界半径： $d_h(t_{m\Lambda})=12880Mpc$. </li></ol><h4 id="11-2粒子数守恒"><a href="#11-2粒子数守恒" class="headerlink" title="11.2粒子数守恒"></a>11.2粒子数守恒</h4><p>宇宙微波背景辐射T=2.725k, 黑体谱的能量密度： $\epsilon=\alpha T^4=0.2606 MeV/m^3$, 辐射： $\epsilon_\gamma=\rho_\gamma c^2$,  $T\sim a^{-1}$ </p><script type="math/tex; mode=display">T=T_0a^{-1}\approx 3a^{-1}=3(1+z)\quad n_\gamma=\beta T^3\sim a^{-3}</script><p> 对于非相对论粒子，$\rho_{mat}=n_{mat}\times m_0\sim a^{-3}\Rightarrow n_{mat}\sim a^{-3}$. 发现和相对论物质的粒子数密度的变化规律是一样的。</p><p>稳定的粒子的总数N是守恒的。宇宙膨胀的时候，$n=\frac{N}{V}\sim \frac{N}{a^3}\sim a^{-3}$ 。</p><p>没有相互作用的时候，N是守恒的，</p><p>有相互作用时候，如果反应很频繁，达到了某种平衡时。粒子数目也守恒</p><script type="math/tex; mode=display">H+\gamma\to p+e^{-1}</script><p>只有在有相互作用，平衡被破坏时候，粒子数不守恒。 </p><h4 id="11-3-离子，原子的电离"><a href="#11-3-离子，原子的电离" class="headerlink" title="11.3 离子，原子的电离"></a>11.3 离子，原子的电离</h4><p>考虑$a=10^{-6}$辐射主导期，CMB 气体$T=3\times 10^{6}K$ 光子的能量： $E_{mean}=2.7k_BT=700eV$ 。H的电离能，$Q=13.6eV$ 。光子气体的能量能够电离氢原子。</p><p>简化模型，认为宇宙中全都是氢原子。</p><p>如果高能光子数目远远大于氢原子数目，则完全电离。 </p><p>Q: 宇宙中，光子与重子数目的比例是多少。</p><script type="math/tex; mode=display">n_{\gamma,0}=4.11\times 10^8m^{-3}</script><p>重子: 核合成的结果：(h=0.68)</p><script type="math/tex; mode=display">0.021<\Omega_{B,0}h^2<0.025</script><p>作为估算，取中间值：</p><script type="math/tex; mode=display">\Omega_{B,0}=\frac{\epsilon_{B,0}}{\rho_{c,0}c^2}\approx 0.023h^{-2}</script><script type="math/tex; mode=display">\epsilon_{B,0}=2.415MeV/m^3</script><p>又知道重子物质，质子，中子的质量是939MeV。</p><script type="math/tex; mode=display">n_{B,0}=0.26m^{-3}\\\frac{n_{\gamma,0}}{n_{B,0}}=1.6\times 10^{9}</script><p>常用重子，光子数目的比例：</p><script type="math/tex; mode=display">\eta=\frac{n_{B,0}}{n_{\gamma,0}}=6\times 10^{-10}</script><h3 id="第十二讲-复合与退耦"><a href="#第十二讲-复合与退耦" class="headerlink" title="第十二讲 复合与退耦"></a>第十二讲 复合与退耦</h3><p>$T\sim a^{-1}$, $T_0=3k$ $E_{mean}=2.7k_BT$</p><p>上节课讲到，重子和光子的数密度之比，当前时刻$\eta=\frac{n_{B,0}}{n_{\gamma,0}}\sim 6\times 10^{-10}$。宇宙的粒子数是守恒的，于是在足够早的时期，这个比值也是成立的。$\eta$在早期也成立。（也不能太早。。。）中性氢原子可以完全电离。完全电离时候，当时宇宙中他的组成：<strong>自由的质子，自由的电子，大量的光子。</strong>  </p><p>根据粒子物理知识，自由电子会与光子发生Thomson散射。散射结果： 这时候的宇宙是不透明的。类似于雾天光子和水蒸气发生散射。</p><p>当宇宙演化，温度逐渐降低，当T降低到不能够使自由质子和电子可以形成中性原子。H原子可以大量形成。中性H原子大量形成的时期叫做复合。（recombination）复合过程会大量消耗自由电子。自由电子减少后使得光子与电子退耦（decoupling不发生散射）。光子退耦后自由传播至今，形成CMB。</p><h4 id="12-1-Thomson散射"><a href="#12-1-Thomson散射" class="headerlink" title="12.1 Thomson散射"></a>12.1 Thomson散射</h4><script type="math/tex; mode=display">\gamma+e^{-}\to \gamma + e^{-}</script><p>结论： 散射截面（理解为反应发生的概率）</p><script type="math/tex; mode=display">\sigma_e=6.65\times 10^{-29}m^{2}</script><p>光子的平均发生Thomson散射前走的距离（平均自由程）：</p><script type="math/tex; mode=display">d=\frac{1}{\sigma_e\cdot n_e}</script><p>光子的平均碰撞时间：(d/c). Thomson散射的速率： $\frac{c}{d}\equiv \Gamma=c\cdot n_e\cdot \sigma_e$ 。其中的$n_e$是会随着宇宙演化发生变化，于是$\Gamma$ 是可变的。 在H完全电离时。 </p><p>在H完全电离时$n_e=n_p\approx n_B$ （电子数=质子数=重子数）</p><p>由于： $n_e=n_B=n_{B,0}a^{-3}$, 其中$n_{B,0}=0.26 m^{-3}$. 于是：</p><script type="math/tex; mode=display">\Gamma=\frac{5.187\times 10^{-21}/s}{a^{3}}</script><p>比如$a=10^{-6}$时候， $\Gamma=5.187\times 10^{-3}/s$ 。 想观察$\Gamma$什么时候足够小，认为电子和光子作用弱，于是可以作为退耦的判断。</p><p>Q：如何判断$\Gamma$是大还是小</p><ul><li>$\Gamma&gt;H$，（H 为哈勃常数）光子和电子耦合, 相互作用平凡（达到平衡），光子温度和电子温度一样。由于电子和质子有电磁作用，于是他们的温度也一样，于是此时光子气体的温度代表了整个宇宙的温度。</li></ul><h4 id="12-2-光子的退耦"><a href="#12-2-光子的退耦" class="headerlink" title="12.2 光子的退耦"></a>12.2 光子的退耦</h4><p>$\Gamma&lt;H$ 光子与电子几乎不再碰撞，也就是退耦。退耦以后宇宙就是透明的了。</p><p>$\Gamma=H$时候，$a_{dec}=?$ $H(a)=?$. 想要知道H和a的关系。F 方程($H\sim\rho$) </p><p>当$a&lt; a_{rm}=2.9\times 10^{-4}$, 宇宙主要以辐射主导。F 方程只考虑辐射的项：</p><script type="math/tex; mode=display">H^2=\frac{8\pi G}{3}\rho_{rad}</script><script type="math/tex; mode=display">\rho_{rad}=\rho_{rad,0}a^{-4}</script><p>于是</p><script type="math/tex; mode=display">H=\frac{H_0\sqrt{\Omega_{rad,0}}}{a^2}</script><p>$H_0=2.203\times 10^{-18}s^{-1}$     $H=\frac{2.1\times 10^{-20}s^{-1}}{a^2}$   当$a=10^{-5}$时， $H=2.1\times 10^{-10}s^{-1}&lt;&lt; \Gamma=5.187\times 10^{-6}s^{-1}$ , 所以说a要大一些。</p><p>进入到了物质主导期。$H=\frac{H_0\sqrt{\Omega_{mat,0}}}{a^{3/2}}$. 令$H=\Gamma$时候， 解出$a=0.026$ 由于 $T\sim a^{-1}\sim 100k$ 于是光子的平均能量是$0.023eV$, 远远低于氢原子的电离能。所以说这个结果是不能接受的。因为早在$T\sim 100k$前，电子已经和质子结合了。于是我们的假设（氢原子完全电离）是错的。这个计算表明复合过程一定发生于退耦之前。复合过程导致电子数$n_e$迅速降低。降低速率比宇宙膨胀导致的减少要快。从而导致光子迅速退耦。退耦是在中性氢原子合成以后迅速完成。</p><p>通过下一讲，复合发生于温度$T_{rec}=3760K$ 相应的宇宙年龄$t_{rec}=25万年$ 。 （发生在物质主导期），相应的红移：(z=1380) 。退耦是在复合之后很快进行的，发生时候的温度=2970k, $t_{dec}=37万年$。 红移(z=1090) </p><p>目前接收的CMB光子： 半径为 13850Mpc —- 如何计算： 已知从$z_{dec}=1090$ 发出的光子传播到$z=0$. 于是计算共动距离： （前面讲过）</p><script type="math/tex; mode=display">d_p(t_0)=\int\frac{cdt}{a(t)}=\int_0^{z_{dec}}\frac{dz'}{H}</script><p> 这个$d_p$形成的球面是叫做最终散射面。（在这个面之后光子是自由传播的）</p><h3 id="第十三讲，复合和退耦（二）"><a href="#第十三讲，复合和退耦（二）" class="headerlink" title="第十三讲，复合和退耦（二）"></a>第十三讲，复合和退耦（二）</h3><p>$T\sim a^{-1}$ 自由电子和光子发生Thomson散射，散射速率$\Gamma=n_3\sigma_e c$, 其中粒子数密度$n_e$随着 a 演化而变化。假设在演化过程中自由电子数守恒。$n_e\sim a^{-3}\sim T^{3}$ 于是$\Gamma(T)\sim T^3$ 。 当$\Gamma&gt;H$, 散射频率比较高，光子与电子耦合。</p><p>在物质主导期，哈勃参数H，可以用密度参数写出： </p><script type="math/tex; mode=display">H=H_0\sqrt{\Omega_{mat,0}}a^{-3/2}=H_0\sqrt{\Omega_{mat,0}}( \frac{T}{T_0})^{3/2}</script><p>定义退耦是$\Gamma=H$的时候。  $a\approx 0.026$,  $T_{dec}=100K\sim 0.023eV$。 当温度降低到一定程度以后，$Q\sim 13.6eV$ 自由电子会被质子（H原子核）或者其他的原子核束缚住，形成中性的原子，这个过程称为复合。复合发生时，自由电子数量不再守恒。所以电子数密度$n_e$ 不能够按照$T^3$ 的方式来下降。而是会以更复杂，更快的方式下降。（比$T^3$的形式更快） 因此，要了解退耦，需要了解复合过程。需要知道$n_e(T)$时如何变化的。同时也就知道$\Gamma(T)$。 于是就可以算出$T_{dec}$ 。简单起见，考虑氢原子复合</p><script type="math/tex; mode=display">p+e^{-}\leftrightarrow H+\gamma</script><h4 id="13-1-电离能"><a href="#13-1-电离能" class="headerlink" title="13.1 电离能"></a>13.1 电离能</h4><p>$Q=13.6eV$ 先考虑温度是$1eV$左右的时刻。这时候正逆反应可以达到平衡。随着温度$T$的降低，部分质子开始与电子$e^-$结合，形成氢原子。引入电离度的概念：</p><script type="math/tex; mode=display">\chi=\frac{n_p}{n_B}=\frac{n_p}{n_p+n_H}=\frac{n_e}{n_p+n_H}</script><p>$n_p$代表自由质子数密度。$n_B$代表重子总数密度（既包括质子的，也包括<strong>被没有电离的</strong>H原子的数密度）。</p><script type="math/tex; mode=display">\frac{1}{\chi}=1+\frac{n_H}{n_e}</script><p>如果$\chi=1$, 代表完全电离。如果$\chi=0$, 代表重子全都是中性原子。从电离度的定义，可以验证一个等式：</p><script type="math/tex; mode=display">\frac{1-\chi}{\chi^2}=\frac{\frac{1}{\chi}-1}{\chi}=\frac{n_H}{n_e}\frac{n_B}{n_e}=\frac{n_H}{n_e^2}n_B</script><p>而$n_B=\eta n_\gamma=\eta\beta T^3$ 于是</p><script type="math/tex; mode=display">\frac{1-\chi}{\chi^2}=\frac{n_H}{n_e^2}\eta\beta T^3=S(T)</script><p>也就是$1-\chi-S(T)\chi^2=0$。 下面解释为什么$\frac{n_H}{n_e^2}$可以写成温度的函数</p><h4 id="13-2-Saha-方程"><a href="#13-2-Saha-方程" class="headerlink" title="13.2 Saha 方程"></a>13.2 Saha 方程</h4><p>在$E\sim 1eV$时， $H,p,e^{-}$都是非相对论的。 ($mc^2&gt;&gt;k_BT$) 由统计物理。非相对论粒子的数密度</p><script type="math/tex; mode=display">n_x=g_x\left(\frac{m_xk_BT}{2\pi\hbar^2}\right)^{3/2}e^{\frac{-m_xc^2+\mu_x}{k_BT}}\quad x=H,p,e^-</script><p>化学平衡条件$\mu_H+\mu_\gamma=\mu_p+\mu_e$  由统计物理：$\mu_\gamma=0$  最终得到关系</p><script type="math/tex; mode=display">\mu_H=\mu_p+\mu_e</script><p>考虑比例关系。</p><script type="math/tex; mode=display">\frac{n_H}{n_e\cdot n_p}=\frac{g_H}{g_eg_p}\left(\frac{m_H}{m_em_p}\frac{2\pi\hbar^2}{k_BT}\right)^{3/2}\times e^{-\beta(m_H-m_e-m_p)c^2}/(k_BT)</script><p>做如下简化：</p><ol><li>电中性 $n_e=n_p$</li><li>氢原子电离能$Q=(m_e+m_p-m_H)c^2=13.6eV$ </li><li>$\frac{m_H}{mem_p}\approx\frac{1}{m_e}$ </li><li>$g_P=g_e=2,g_H=4$</li></ol><p>最终得到Saha方程</p><script type="math/tex; mode=display">\frac{n_H}{n_e^2}\eta\beta T^3=\left(\frac{2\pi\hbar^2}{m_ek_BT}\right)^{3/2}e^{Q/k_BT}\eta\beta T^3\equiv S(T)</script><p>得到电离度S和温度之间的联系</p><script type="math/tex; mode=display">\chi(T)=\frac{-1+\sqrt{1+4S(T)}}{2S(T)}</script><h4 id="13-3-复合"><a href="#13-3-复合" class="headerlink" title="13.3 复合"></a>13.3 复合</h4><p>一般把复合定义为电离度$\chi$取某个特定值的时刻。不同的书定义不一样。比如说Liddle书，复合的定义是$\chi=0.1$ 也就是有90%的质子已经形成了H原子的温度。$\frac{n_p}{n_B}=0.1$  Ryden 书中说复合的定义是$\chi=0.5$ $k_BT=0.324eV=\frac{Q}{42}$   $T_{rec}=3760K$  </p><p>利用$a\sim T^{-1} \Rightarrow a_{rec}=\frac{2.725K}{3760K}=7.25\times 10^{-4}$</p><p>由于物质-辐射主导期的分界线是$a_{rm}=2.9\times 10^{-4}$。 所以复合发生在物质主导期。</p><h4 id="13-4-光子的退耦"><a href="#13-4-光子的退耦" class="headerlink" title="13.4 光子的退耦"></a>13.4 光子的退耦</h4><script type="math/tex; mode=display">复合开始\Rightarrow n_e快速下降\Rightarrow 光子退耦</script><p>光子的退耦也发生于物质主导期。物质主导期</p><script type="math/tex; mode=display">H=H_0\sqrt{\Omega_{mat,0}}\left(\frac{T}{T_0}\right)^{3/2}</script><p>退耦：</p><script type="math/tex; mode=display">\Gamma(T)=H(T)</script><p>由于</p><script type="math/tex; mode=display">\Gamma(T)=n_e\sigma_e c</script><p>利用</p><script type="math/tex; mode=display">\chi=\frac{n_P}{n_B}</script><p>得到 ($\eta$是光子的重子数之比)</p><script type="math/tex; mode=display">n_e=\chi \;n_B=\chi\eta\; n_\gamma=\chi\eta\beta T^3</script><p>带入$\chi$的具体形式。 于是</p><script type="math/tex; mode=display">\Gamma(T)=\chi(T)\eta\beta\;T^3\sigma_e c</script><p>于是</p><script type="math/tex; mode=display">\Gamma(T)=H(T)\Rightarrow T_{dec}=3.9\times 10^{-4}\quad z_{dec}=1120</script><p>计算出退耦时候的宇宙年龄</p><script type="math/tex; mode=display">t_{dec}=\int_{zdec}^{+\infty}\frac{dz'}{(1+z')H(z')}\approx 35.5万年</script><p>需要注意，SAha方程的成立前提是反应</p><script type="math/tex; mode=display">p+e^{-}\leftrightarrow H+\gamma</script><p>是平衡反应。实际上，这个反应在后期会被破坏平衡性。要考虑非平衡效应。最终结果：</p><script type="math/tex; mode=display">T_{dec}=2970K\quad z_{dec}=1190\quad t_{dec}=37.1万年</script><h4 id="13-5宇宙膨胀与光子黑体谱的保持"><a href="#13-5宇宙膨胀与光子黑体谱的保持" class="headerlink" title="13.5宇宙膨胀与光子黑体谱的保持"></a>13.5宇宙膨胀与光子黑体谱的保持</h4><p>CMB 是宇宙早期留下来的形成的光子自由传播至今。CMB后，光子数量守恒。</p><p>宇宙膨胀$\Rightarrow$  CMB的性质发生变化</p><ol><li>数密度减少$n\sim a^{-3}$</li><li>每个光子将发生红移$f\sim a^{-1}$</li><li>光子气体温度下降$T\sim a^{-1}$</li></ol><p>考虑$a\to a’$的过程。 a时，频率在$f\sim f+df$ 内的光子数密度是</p><script type="math/tex; mode=display">n(f)df=c\frac{f^2df}{e^{\frac{hf}{k_BT}}-1}</script><p>到$a’$时，这些光子的频率是$f’=f\frac{a}{a’}$</p><script type="math/tex; mode=display">n'(f')df'=n(f)df(\frac{a}{a'})^3=c\frac{f^2df}{e^{\frac{hf}{k_BT}}-1}(\frac{a}{a'})^3=c\frac{f'^2df'}{e^{\frac{hf'}{k_BT'}}-1}</script><p>就是说分布仍然是黑体辐射。</p><h3 id="暴涨"><a href="#暴涨" class="headerlink" title="暴涨"></a>暴涨</h3><p>大爆炸理论，宇宙从高温，高密度的初始状态演化。早期宇宙没有中性原子，只有核子电子光子等粒子。1s到1min发生核合成。核合成可以预言H，He等粒子的比例。可以预言轻核的丰度。可以观测早期气体的丰度。</p><p>大爆炸理论存在一些疑难。主要在考虑到极早期宇宙时，疑难会显现出来。解决方案： 暴胀，宇宙极早期，（早于核合成，比如$10^{-36}s-10^{-34}s$） 一个极短的加速膨胀。暴胀结束后，宇宙按照大爆炸描述的过程演化。</p><ol><li><p>大爆炸存在的疑难</p><ul><li><p>A、 (flatness, 平直性疑难) CMB, BAO, 超新星观测。当前宇宙介质的总密度参数$\Omega_{tot}=\Omega_{mat,0}+\Omega_{rad,0}+\Omega_{\Lambda,0}$ 三者大约是0.31 $10^{-5}$  0.96。 但是由弗里德曼方程 $\Omega_{tot,0}+\Omega_{k,0}=1$. 说明 $\Omega_{k,0}\approx 0$ 说明$t_0$时刻，空间几何近似平直。</p><script type="math/tex; mode=display">\Omega_{tot}\equiv \frac{\rho_{tot}}{\rho_c}\quad \text{随时间变化}</script><script type="math/tex; mode=display">\rho_c=\frac{3H^2}{8\pi G}\quad \rho_{tot}=\rho_{mat}+\rho_{rad}+\rho_{\Lambda}</script><p>F 方程：</p><script type="math/tex; mode=display">H^2=\frac{8\pi G}{3}\rho_{tot}-\frac{kc^2}{a^2}\rightarrow |1-\Omega_{tot}|=\frac{k}{aH^2}</script><p>如果$\Omega_{tot}=1$, 则$k=0$。 若$\Omega\approx 1$则 $|\Omega_{tot}-1|$ 随时间t变化。考虑两种典型的解。</p><ol><li><p>物质主导：</p><script type="math/tex; mode=display">a(t)=(\frac{t}{t_0})^{2/3}\;\; H(t)=\frac{2}{3t}</script><p>则：</p><script type="math/tex; mode=display">|\Omega_{tot}(t)-1|=\frac{|k|}{a^2H^2}\sim t^{2/3}</script></li><li><p>辐射主导：</p><script type="math/tex; mode=display">a(t)=(\frac{t}{t_0})^{1/2}\quad H(t)=\frac{1}{2t}</script><script type="math/tex; mode=display">|\Omega_{tot}(t)-1|\sim t</script></li></ol><p>对这两种情况 $|\Omega_{tot}-1|$ 都是随着时间单调增。试验观测现在是$|\Omega_{tot}-1|\sim 10^{-3}$， 在核合成$t_{nuc}$的时候。$|\Omega_{tot}(t_{nuc})-1|\sim 10^{-15}$。意味着处于平直几何是宇宙的一种不稳定状态。</p></li><li><p>B、视界疑难</p><p>能看到的范围叫做最终散射面。按照大爆炸理论宇宙年龄有限。光速有限，能看到的可观测宇宙有限。CMB观测结果：早期宇宙几乎是各向同性的。T=2.725K </p><p>简单计算：假设宇宙一直是物质主导$\Omega_{mat=1}$, $a(t)\sim t^{2/3}$，取$H_0=100km/s/Mpc$ 宇宙年龄$t_0=\frac{1}{H_0}$, 光速$c=3\times 10^{-7}Mpc/yr$ 从大爆炸到现在，光能传播的最远距离，视界： $c t_0=3000Mpc$。</p><p>CMB形成于光子退耦时候：</p><script type="math/tex; mode=display">\frac{a}{a_{dec}}=1000=(\frac{t_0}{t_{dec}})^{2/3}\rightarrow t_{dec}=10^{11/2}yrs</script><p>从大爆炸到$t_{dec}$，光子能走的最远距离：</p><script type="math/tex; mode=display">l_{dec}=c t_{dec}=0.095Mpc</script><p>相应的共动距离：（当前来看的距离）</p><script type="math/tex; mode=display">l_{dec}/a_{dec}=1000l_{dec}=95Mpc</script><p>而我们当前的视界距离是$3000Mpc$ ,相应的角度： （代表物质能相互联系的角度）</p><script type="math/tex; mode=display">\theta=\frac{95Mpc}{3000Mpc}=2^\circ</script></li><li><p>C.重粒子残留丰度疑难（磁单极子）</p><p>辐射至少在大爆炸后的一个时间内主导$t_{rm}\sim 3万年$。 $\rho_{rad}\sim a^{-4}$, $\rho_{mat}\sim a^{-3}$ $\rho_{rad}$ 衰减更快。若早期有少量NR重粒子，他们很快占主导。代表：1. 大统一理论的磁单极子2.超引力，引力微子 100GeV，$S=\frac{3}{2}$ 。超弦理论 spin 0, 质量大，很快变成WR。$T_{GUT}\sim 3\times 10^{28}k$, 产生了$\Omega_{mon}=10^{-10}\Omega_{rad}$ 则$\frac{\Omega_{mon}}{\Omega_{rad}}\sim\frac{1}{T}$，产生时$\frac{\Omega_{mon}}{\Omega_{rad}}|_{T=3\times 10^{28}}=10^{-10}$. 当$T=3\times 10^{18}K$时， $\Omega_{mon}=\Omega_{rad}$,而当 $T=3K$时候，$\frac{\Omega_{mon}}{\Omega_{rad}}|_{T=3K}=10^{18}:1$与观测不符。</p></li></ul></li><li><p>暴胀，加速速膨胀。</p><script type="math/tex; mode=display">p<-\frac{\rho c^2}{3}\quad w<-\frac{1}{3}</script><p>最简单模型$\Lambda&gt;0$ ,$w=-1&lt;-\frac{1}{3}$ , F 方程$H^2=\frac{\Lambda}{3}\rightarrow a=e^{\sqrt{\frac{\Lambda}{3}}t}$. 暴胀开始，结束都必须很早。结束时候$\Lambda$的能量传给了物质。一般暴胀模型假设发生于$10^{-36}s$左右，结束于$10^{-34}s$对应GUT的能量 $10^{16}GeV$ </p><p>解决平直疑难问题：</p><p>存在的原因是</p><script type="math/tex; mode=display">|\Omega_{tot}-1|=\frac{|k|}{a^2H^2}</script><p>是时间的增函数。在暴胀中，$\ddot{a}&gt;0\rightarrow \frac{d}{dt}\dot{a}&gt;0$也就是 $\frac{d}{dt}(\frac{\dot{a}}{a}a)&gt;0$,也就是 $\frac{d}{dt}(Ha)&gt;0$ 指数膨胀：</p><script type="math/tex; mode=display">|\Omega_{tot}-1|\sim e^{-\sqrt{\frac{4\Lambda}{3}}t}</script><p>解决世界疑难问题：</p><p>暴胀前如果有一个区域，处于因果范围内。暴胀结束后的大小比当前宇宙都要大。</p></li><li><p>暴胀的五点假设：</p><ol><li>暴胀结束于$10^{-34}s$, </li><li>指数膨胀</li><li>结束至今，辐射主导</li><li>开始前$|\Omega_{tot}-1|\sim 1$</li><li>当前时刻$t_0$, $|\Omega_{tot}-1|&lt;0.1$, 辐射主导期$|\Omega_{tot}(t)-1|\sim t$ $t_0=4\times 10^{17}s$ ,于是$|\Omega_{tot}(t=10^{-34}s)-1|&lt;3\times 10^{-53}$ 。在暴胀时期，H为常数，$|\Omega_{tot}-1|\sim\frac{1}{a^2}$, 暴胀过程要膨胀$10^{27}$ </li></ol></li></ol>]]></content>
      
      
      <categories>
          
          <category> 宇宙学 </category>
          
          <category> 课程笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 宇宙学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>群论笔记</title>
      <link href="/2024/06/12/qun-lun-bi-ji/"/>
      <url>/2024/06/12/qun-lun-bi-ji/</url>
      
        <content type="html"><![CDATA[<p><a href="elegantbook-cn.pdf">下载链接</a></p><embed src="./elegantbook-cn.pdf" width="100%" height="900" type="application/pdf">]]></content>
      
      
      <categories>
          
          <category> 群论 </category>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GroupTheory </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo基础以及github部署</title>
      <link href="/2024/06/12/hexo-ji-chu-yi-ji-github-bu-shu/"/>
      <url>/2024/06/12/hexo-ji-chu-yi-ji-github-bu-shu/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.bilibili.com/video/BV1Yb411a7ty/?spm_id_from=333.337.top_right_bar_window_history.content.click&amp;vd_source=2ed6b2cfcd027bbe7f7bac6d27852f66">学习视频b站地址</a></p><p>首先进入管理员模式</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo su</span></span><br></pre></td></tr></table></figure><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>创建文件夹</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir blog</span><br></pre></td></tr></table></figure><p>进入到创建的文件夹中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog/</span><br></pre></td></tr></table></figure><p>在这个文件夹中创建hexo博客系统(有点类似于git中的创建仓库)</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo hexo <span class="keyword">init</span></span><br></pre></td></tr></table></figure><p>show博客，之后会有一个网址，在浏览器中打开即可</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo s</span></span><br></pre></td></tr></table></figure><p>创建一个新的名字如下的文章，实际上就是生成了一个markdown文件，题目是下面这样。</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="built_in">n</span> <span class="string">&quot;第一个测试文章&quot;</span></span><br></pre></td></tr></table></figure><p>进入到上一步所生成的文章的文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="built_in">source</span>/_posts/</span><br></pre></td></tr></table></figure><p>回退到初始的博客系统文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ../..</span><br></pre></td></tr></table></figure><p>我也不知道这个clean操作是干什么，但是每次修改完博客最好clean一下。</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo clean</span></span><br></pre></td></tr></table></figure><p>generate意思应该是将markdown文件生成为 .html 文件</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo g</span></span><br></pre></td></tr></table></figure><p>show博客，前面提到过了</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo s</span></span><br></pre></td></tr></table></figure><h3 id="github上创建仓库"><a href="#github上创建仓库" class="headerlink" title="github上创建仓库"></a>github上创建仓库</h3><p>仓库的名字叫做</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Chenhao-Peng.github.<span class="built_in">io</span></span><br></pre></td></tr></table></figure><h3 id="在本地blog目录下安装git的部署插件"><a href="#在本地blog目录下安装git的部署插件" class="headerlink" title="在本地blog目录下安装git的部署插件"></a>在本地blog目录下安装git的部署插件</h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install <span class="comment">--save hexo-deployer-git</span></span><br></pre></td></tr></table></figure><h3 id="设置-config-yml-文件"><a href="#设置-config-yml-文件" class="headerlink" title="设置 _config.yml 文件"></a>设置 _config.yml 文件</h3><p>用vim打开config文件。</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim _<span class="built_in">config</span>.yml</span><br></pre></td></tr></table></figure><p>之后滚动到文件的最底部，能找到Deployment 部分，这么写。</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">deploy:</span></span><br><span class="line"><span class="symbol">  type:</span> git</span><br><span class="line"><span class="symbol">  repo:</span> https:<span class="comment">//ghp_HXhQif6iSqWLI8BV0cSG21Dg7SYB********@github.com/Chenhao-Peng/Chenhao-Peng.github.io.git</span></span><br><span class="line"><span class="symbol">  branch:</span> master</span><br></pre></td></tr></table></figure><p>上面的token “ghp…”是从github-设置-开发者设置-Tokens中找到的。</p><p>之后，按一下键盘的esc，然后输入:wq就可以保存退出了。</p><h3 id="将hexo部署到远端"><a href="#将hexo部署到远端" class="headerlink" title="将hexo部署到远端"></a>将hexo部署到远端</h3><p>使用命令</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo d</span></span><br></pre></td></tr></table></figure><p>会让输入github的账号与密码。不过现在需要设置token才可以正常访问。</p><h3 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h3><p>比如说，换为github上的yilia主题。在blog目录下，用git命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br></pre></td></tr></table></figure><p>将一个主题克隆到了yilia主题下的目录里。</p><p>之后回到_config.yml文件。在这个文件中的Extension 部分，有一个theme: 直接把后面的改为yilia就好了。</p><p>之后就是hexo clean, hexo g, hexo d。（清理，生成，部署）</p><h3 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;title&quot;</span><br></pre></td></tr></table></figure><p>之后，在文章的前面要有类似于这样的标识：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: hexo基础以及github部署</span><br><span class="line">date: 2024-06-12 00:47:17</span><br><span class="line">author: Chenhao Peng</span><br><span class="line">mathjax: true</span><br><span class="line">categories: </span><br><span class="line"><span class="bullet">    -</span> blog</span><br><span class="line"><span class="bullet">    -</span> hexo</span><br><span class="line">tags: </span><br><span class="line"><span class="bullet">    -</span> hexo</span><br><span class="line"><span class="section">    - blog</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算物理课程笔记</title>
      <link href="/2024/06/11/ji-suan-wu-li-ke-cheng-bi-ji/"/>
      <url>/2024/06/11/ji-suan-wu-li-ke-cheng-bi-ji/</url>
      
        <content type="html"><![CDATA[<h3 id="第一章基本数值运算"><a href="#第一章基本数值运算" class="headerlink" title="第一章基本数值运算"></a>第一章基本数值运算</h3><h4 id="微分"><a href="#微分" class="headerlink" title="微分"></a>微分</h4><ul><li><p>向前</p><script type="math/tex; mode=display">\begin{aligned}&f(x_0+h)=f(x_0)+hf'(x_0)+\frac{h^2}{2}f''(\xi)\\  &\frac{f(x_0+h)-f(x_0)}{h}=f'(x_0)+\frac{h}{2}f''(\xi)\\  &R=-\frac{h}{2}f''(\xi)\end{aligned}</script></li><li><p>向后</p><script type="math/tex; mode=display">\begin{aligned}&f(x_0-h)=f(x_0)-hf'(x_0)+\frac{h^2}{2}f''(\xi)\\&\frac{f(x_0)-f(x_0-h)}{h}=f'(x_0)-\frac{h}{2}f''(\xi)\\&R=\frac{h}{2}f''(\xi)\end{aligned}</script></li><li><p>中心差分</p><script type="math/tex; mode=display">\begin{aligned} &f(x_0+h)=f(x_0)+hf'(x_0)+\frac{h^2}{2}f''(x)+\frac{h^3}{3!}f'''(\xi_{+})\\  &f(x_0-h)=f(x_0)-hf'(x_0)+\frac{h^2}{2}f''(x)-\frac{h^3}{3!}f'''(\xi_{-})\\  &\frac{f(x_0+h)-f(x_0-h)}{2h}=f'(x_0)+\frac{h^2}{12}(f'''(\xi_{+})+f'''(\xi_{-}))\\  &R =-\frac{h^2}{12}(f'''(\xi_{+})+f'''(\xi_{-}))\end{aligned}</script></li><li><p>五点公式</p><script type="math/tex; mode=display"> \begin{aligned}&f(x_0+h)=f(x_0)+hf'(x_0)+\frac{h^2}{2}f''(x)+\frac{h^3}{3!}f'''(x)\\&\quad\quad\quad\quad\quad +\frac{h^4}{4!}f^{(4)}(x)+\frac{h^5}{5!}f^{(5)}(\xi_{+})\\ & f(x_0-h)=f(x_0)-hf'(x_0)+\frac{h^2}{2}f''(x)-\frac{h^3}{3!}f'''(x)\\ &\quad\quad\quad\quad\quad +\frac{h^4}{4!}f^{(4)}(x)-\frac{h^5}{5!}f^{(5)}(\xi_{-})\\  &f(x_0+2h)=f(x_0)+2hf'(x_0)+2h^2f''(x)+\frac{4h^3}{3}f'''(x)\\  &\quad\quad\quad\quad\quad+\frac{2h^4}{3}f^{(4)}(x)+\frac{(2h)^5}{5!}f^{(5)}(\xi_{+})\\  &f(x_0-2h)=f(x_0)-2hf'(x_0)+2h^2f''(x)-\frac{4h^3}{3}f'''(x)\\  &\quad\quad\quad\quad\quad+\frac{2h^4}{3}f^{(4)}(x)-\frac{(2h)^5}{5!}f^{(5)}(\xi_{-})\\ & \frac{8(f(x_0+h)-f(x_0-h))-(f(x_0+2h)-f(x_0-2h))}{12h}\\ &\quad\quad\quad\quad\quad=f'(x)+O(h^5)\\ & R = O(h^5)\end{aligned}</script></li></ul><h4 id="积分"><a href="#积分" class="headerlink" title="积分"></a>积分</h4><h5 id="langrange插值法"><a href="#langrange插值法" class="headerlink" title="langrange插值法"></a>langrange插值法</h5><ul><li><p>一阶插值<br>函数已知($x_0$,$y_0$),($x_1$,$y_1$)两点。可以取函数。</p><script type="math/tex; mode=display">y = y_0\frac{x-x_1}{x_0-x_1}+y_1\frac{x-x_0}{x_1-x_0}</script><p>实际上可以引入lagrange插值基函数</p><script type="math/tex; mode=display">l_0(x)=\frac{x-x_1}{x_0-x_1}\\l_1(x)=\frac{x-x_0}{x_1-x_0}</script><p>插值基函数的特点:再角标对应的点数值为1，在其他角标对应的点数值为0</p></li><li><p>高阶插值(比如说n阶)</p><p>函数已知点($x_0$,$y_0$),($x_1$,$y_1$) … ($x_n$,$y_n$)</p><p>可以取函数:</p><script type="math/tex; mode=display">y = y_0l_0(x)+y_1l_1(x)+y_2l_2(x)...+y_nl_n(x)</script><p>插值基函数:</p><script type="math/tex; mode=display">l_i(x)=\frac{(x-x_0)(x-x_1)...(x-x_{i-1})(x-x_{i+1})...(x-x_n)}{(x_i-x_0)(x_i-x_1)...(x_i-x_{i-1})(x_i-x_{i+1})...(x_i-x_n)}</script><p>比如说二阶插值</p><script type="math/tex; mode=display">y = y_0\frac{(x-x_1)(x-x_2)}{(x_0-x_1)(x_0-x_2)}+y_1\frac{(x-x_0)(x-x_1)}{(x_1-x_0)(x_1-x_2)}+y_2\frac{(x-x_0)(x-x_1)}{(x_2-x_0)(x_2-x_1)}</script><p>比如说三阶插值</p><script type="math/tex; mode=display">\begin{aligned}y = y_0\frac{(x-x_1)(x-x_2)(x-x_3)}{(x_0-x_1)(x_0-x_2)(x_0-x_3)}+y_1\frac{(x-x_0)(x-x_2)(x-x_3)}{(x_1-x_0)(x_1-x_2)(x_1-x_3)}+\\y_2\frac{(x-x_0)(x-x_1)(x-x_3)}{(x_2-x_0)(x_2-x_1)(x_2-x_3)}+y_3\frac{(x-x_0)(x-x_1)(x-x_2)}{(x_3-x_0)(x_3-x_1)(x_3-x_2)}\end{aligned}</script></li><li><p>runge现象<br>插值阶数比较高时反而效果不好</p></li></ul><h5 id="三种插值积分方式"><a href="#三种插值积分方式" class="headerlink" title="三种插值积分方式"></a>三种插值积分方式</h5><ul><li><p>辛普生成公式(simpson)</p><p>考虑三个点($x_{i}$,$y_{i}$),($x_{i+1}$,$y_{i+1}$),($x_{i+2}$,$y_{i+2}$)</p><script type="math/tex; mode=display">y = y_{i}\frac{(x-x_{i+1})(x-x_{i+2})}{(x_i-x_{i+1})(x_i-x_{i+2})}+y_{i+1}\frac{(x-x_i)(x-x_{i+2})}{(x_{i+1}-x_{i})(x_{i+1}-x_{i+2})}\\+y_{i+2}\frac{(x-x_i)(x-x_{i+1})}{(x_{i+2}-x_i)(x_{i+2}-x_{i+1})}</script><p>将y从$x_i$积分到$x_{i+2}$</p><script type="math/tex; mode=display">I = \int_{x_{i}}^{x_{i+2}}ydx</script><p>积分得到(<em>草稿E1</em>)</p><script type="math/tex; mode=display">\begin{aligned}&I = y_i\frac{-\frac{1}{3}(x_i-x_{i+2})^2+x_i(x_i-x_{i+2})+\frac{1}{2}(x_{i+1}+x_{i+2})(x_i+x_{i+2})-x_i^2-x_{i+1}x_{i+2}}{x_i-x_{i+1}}\\& +y_{i+1}\frac{1}{(x_{i+1}-x_{i})(x_{i+1}-x_{i+2})}\Big(\frac{1}{3}\left((x_{i+2}-x_{i+1}\right)^3-(x_i-x_{i+1})^3) \\&\quad\quad +\frac{1}{2}\left((x_{i+2}-x_{i+1})^2-(x_i-x_{i+1})^2\right)(2x_{i+1}-x_i-x_{i+2})\\&\quad\quad+(x_{i+1}-x_i)(x_{i+1}-x_{i+2})(x_{i+2}-x_i)\Big)\\&+y_{i+2}\frac{1}{(x_{i+2}-x_i)(x_{i+2}-x_{i+1})}\Big(\frac{1}{3}\left((x_{i+2}-x_{i+1})^3-(x_i-x_{i+1})^3\right)\\&\quad\quad +\frac{1}{2}(x_{i+1}-x_i)\left((x_{i+2}-x_{i+1})^2-(x_i-x_{i+1})^2\right)\Big)\end{aligned}</script><p>若认为$x_i$,$x_{i+1}$,$x_{i+2}$之间相差h。则简化积分为</p><script type="math/tex; mode=display">I=\frac{1}{3}h(y_i+4y_{i+1}+y_{i+2})</script><p>在此情况下，若将积分区间划分为n等分(从$x_0$到$x_n$,n一定是2的整数倍),h表示相邻两点之间的距离。可以将积分表示为</p><script type="math/tex; mode=display">I = \frac{1}{3}h(f(x_0)+4\Sigma_{j=0}^{\frac{n}{2}-1}f(x_0+h+2jh)+2\Sigma_{i=0}^{\frac{n}{2}-2}f(x_0+2h+2jh)+f(x_n))</script></li><li><p>simpson$\frac{3}{8}$算法。Newton积分公式</p><p>如果已知四个点($x_{i}$,$y_{i}$),($x_{i+1}$,$y_{i+1}$),($x_{i+2}$,$y_{i+2}$),($x_{i+3}$,$y_{i+3}$)</p><script type="math/tex; mode=display">\begin{aligned}y =& y_i\frac{(x-x_{i+1})(x-x_{i+2})(x-x_{i+3})}{(x_i-x_{i+1})(x_i-x_{i+2})(x_i-x_{i+3})}\\&+y_{i+1}\frac{(x-x_i)(x-x_{i+2})(x-x_{i+3})}{(x_{i+1}-x_i)(x_{i+1}-x_{i+2})(x_{i+1}-x_{i+3})}\\&+y_{i+2}\frac{(x-x_i)(x-x_{i+1})(x-x_{i+3})}{(x_{i+2}-x_i)(x_{i+2}-x_{i+1})(x_{i+2}-x_{i+3})}\\&+y_{i+3}\frac{(x-x_i)(x-x_{i+1})(x-x_{i+2})}{(x_{i+3}-x_i)(x_{i+3}-x_{i+1})(x_{i+3}-x_{i+2})}\end{aligned}</script><p>在区间$x_{i}$到$x_{i+3}$之间积分得(认为间距相等且是h)</p><script type="math/tex; mode=display">I =\frac{3}{8}h(f(x_i)+3f(x_{i+1})+3f(x_{i+2})+f(x_{i+3}))</script><p>若将积分区间分为从$x_0$到$x_n$一共n个区间,且n是3得整数倍。</p><script type="math/tex; mode=display">\begin{aligned}I = \frac{3}{8}h(f(x_0)+\Sigma_{j=0}^{j=\frac{n}{3}-1}3(f(x_0+h+3jh)+f(x_0+2h+3jh))\\+\Sigma_{j=0}^{j=\frac{n}{3}-2}2f(x_0+3h+3jh)+f(x_0+nh))\end{aligned}</script></li><li><p>线性插值积分</p><p>如果已知两个点的坐标($x_i$,$y_i$),($x_{i+1}$,$y_{i+1}$)</p><script type="math/tex; mode=display">I = \frac{1}{2}h(f(x_i)+f(x_{i+1}))</script><p>若将区间划分为n等分，从$x_0$到$x_n$。每一份之间距离为h。</p><script type="math/tex; mode=display">I = \frac{1}{2}h(f(x_0)+\Sigma_{j=0}^{j=n-2}2f(x_0+h+jh)+f(x_0+nh))</script></li></ul><p>有一个二重积分的例子几乎用到了所有的技巧:</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;F:\BaiduSyncdisk\计算物理与程序设计\第二次课PPT及源程序\第二次课\chap1_integration_double.m&quot;</span></span><br></pre></td></tr></table></figure><h4 id="寻找函数的根"><a href="#寻找函数的根" class="headerlink" title="寻找函数的根"></a>寻找函数的根</h4><h5 id="二分法"><a href="#二分法" class="headerlink" title="二分法"></a>二分法</h5><p>二分法的流程:初始化f(x),a,b,$\epsilon$(误差标准)。取x = (a+b)/2。若|b-a|&lt;$\epsilon$,则结束运算,输出x。计算f(x),若f(a)f(x)&gt;0,则a = x,负责令b = x,返回x=(a+b)/2。</p><p>一个老师的例子($f(x)=2x^3-5x-1$),matlab 技巧方面,用了二分法(封装在函数里面)。</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;F:\BaiduSyncdisk\计算物理与程序设计\第三次课PPT及源程序\chap1_example_3_bisection_function.m&quot;</span></span><br></pre></td></tr></table></figure><h5 id="newton-Raphson方法"><a href="#newton-Raphson方法" class="headerlink" title="newton-Raphson方法"></a>newton-Raphson方法</h5><p>newton-Raphson方法的流程: 初始化$x_0$,误差标准$\delta$,$\epsilon$,设置迭代次数k=0。计算$x_{k+1}=x_k-\frac{f(x_k)}{f’(x_k)}$,迭代k = k+1。若$|f(x_k)|\leq\delta\land|x_{k+1}-x_k|&lt;\epsilon$则退出循环。</p><p>老师的一个例子用牛顿法求解$f(x)=e^x-1.5-tan^{-1}x$初始点$x_0=-7.0$,又用二分法在[-16,-7]上面的解</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;F:\BaiduSyncdisk\计算物理与程序设计\第三次课PPT及源程序\chap1_example_4_bisection_newton.m&quot;</span></span><br></pre></td></tr></table></figure><h5 id="弦割法"><a href="#弦割法" class="headerlink" title="弦割法"></a>弦割法</h5><p>需要两个启动点</p><script type="math/tex; mode=display">f'(x_k) = \frac{f(x_k)-f(x_{k-1})}{x_k-x_{k-1}}\\x_{k+1} = x_{k}-\frac{f(x_k)}{f'(x_k)}\\</script><p>停止的标志:</p><script type="math/tex; mode=display">|x_{k+1}-x_{k}|<\epsilon \land |f(x_k)|<\delta</script><p>弦割法的计算流程。初始化$x_0$,$x_1$,误差标准$\delta$和$\epsilon$,设置k=0。若$|f(x_K)|\leq\delta\land|x_K-x_{k+1}|\leq\epsilon$则停止。计算$x_{k+1}=x_k-f(x_K)\frac{x_k-x_{k-1}}{f(x_k)-f(x_{k-1})}$。k=k+1,转到2。</p><p>老师的例:$xe^x-1=0,x_0=0.5,x_1=0.6$,例子程序。</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;F:\BaiduSyncdisk\计算物理与程序设计\第三次课PPT及源程序\chap1_example_5_bisection_newton_secant.m&quot;</span></span><br></pre></td></tr></table></figure><ul><li>三种求根方法的总结<br>最好先用二分法找到大概位置，再用另外两个方法找到根的具体位置。</li></ul><h5 id="方程多根"><a href="#方程多根" class="headerlink" title="方程多根"></a>方程多根</h5><ul><li><p>先逐步搜索找到根存在区间，再用上面三种方法找到精确值。<br>老师的一个例子(程序比较复杂233)</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;F:\BaiduSyncdisk\计算物理与程序设计\第三次课PPT及源程序\chap1_example_6_several.m&quot;</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="Matlab程序"><a href="#Matlab程序" class="headerlink" title="Matlab程序"></a>Matlab程序</h5><ul><li>fzero(f,[3,4])  (f是句柄函数)</li><li>roots(c) 多项式的全部零点</li><li>fsolve 非线性方程组的数值解</li></ul><h4 id="微分方程求解"><a href="#微分方程求解" class="headerlink" title="微分方程求解"></a>微分方程求解</h4><h5 id="初值问题"><a href="#初值问题" class="headerlink" title="初值问题"></a>初值问题</h5><ul><li>初值问题的题目形式<script type="math/tex; mode=display">\frac{dy}{dx}=f(x,y)\\x\in(a,b)\\y(x=a)=y_0</script></li></ul><h6 id="Euler-法"><a href="#Euler-法" class="headerlink" title="Euler 法"></a>Euler 法</h6><script type="math/tex; mode=display">y_{n+1}=y_{n}+hf(x_n,y_n)</script><ul><li>老师课上的例子<script type="math/tex; mode=display">m\frac{d^2x}{d^2t}=f(x,t)\\p = m\frac{dx}{dt}\\\frac{dp}{dt}=f(x,t)\\\frac{dx}{dt}=p/m\\x_{n+1}=hp_{n}/m+x_{n+1}\\p_{n+1}=hf(x_n,tn)+p_n</script><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;F:\BaiduSyncdisk\计算物理与程序设计\第四次课PPT及源程序\第四次课PPT及源程序\chapter2_example_2_harmonic_oscillator.m&quot;</span></span><br></pre></td></tr></table></figure></li></ul><h6 id="Taylor-级数法"><a href="#Taylor-级数法" class="headerlink" title="Taylor 级数法"></a>Taylor 级数法</h6><p>误差大概是$h^2$的量级。</p><script type="math/tex; mode=display">y(x_n+h)=y(x_n)+hy'(x_n)+\frac{1}{2}h^2y''(x_n)</script><p>实际上</p><script type="math/tex; mode=display">y'(x_n)=f(x_n,y_n)\\y''(x_n)=\frac{\partial }{\partial x}f(x_n,y_n)+f\frac{\partial}{\partial y}f(x_n,y_n)</script><h6 id="Adams-Bashforth-二步法"><a href="#Adams-Bashforth-二步法" class="headerlink" title="Adams-Bashforth 二步法"></a>Adams-Bashforth 二步法</h6><p>需要多个启动点的都叫多步法。</p><script type="math/tex; mode=display">y_{n+1}=y_n+\int_{x_n}^{x_{n+1}}f(x,y(x))dx\\y_{n+1}=y_n+h(\frac{3}{2}f_n-\frac{1}{2}f_{n-1})</script><h6 id="AB四步法"><a href="#AB四步法" class="headerlink" title="AB四步法"></a>AB四步法</h6><script type="math/tex; mode=display">y_{n+1}=y_n+h\frac{1}{24}(55f_n-59f_{n-1}+37f_{n-2}-9f_{n-3})</script><p>启动点用Taylor级数法得到。</p><ul><li>上课的一个例题<script type="math/tex; mode=display">\frac{dy}{dx}=-xy  y(0)=1</script><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;F:\BaiduSyncdisk\计算物理与程序设计\第五次课-计算物理第2章-常  微分方程的初值问题\chapter2_example_4_Adams_Bashforth.m&quot;</span></span><br></pre></td></tr></table></figure></li></ul><h6 id="隐式法"><a href="#隐式法" class="headerlink" title="隐式法"></a>隐式法</h6><p>类似于AB方法，不过在插值时用了$f_{n+1}$这一项。例如:</p><p>因为方程左右都含有$y_{n+1}$,所以叫做隐式法。</p><ul><li>Adams-Moulton一步法<script type="math/tex; mode=display">\begin{aligned}y(x_{n+1})&=y(x_n)+\int_{x_n}^{x_{n+1}}f(x,y(x))dx\\&=y(x_n)+\int_{x_n}^{x_{n+1}}\left(f_n\frac{x-x_{n+1}}{x_n-x_{n+1}}+f_{n+1}\frac{x-x_n}{x_{n+1}-x_n}\right)dx\\&=y_n+\frac{h}{2}[f_n+f_{n+1}]+O(h^3)\end{aligned}</script></li></ul><ul><li><p>Adams-Moulton二步法</p><script type="math/tex; mode=display">y_{n+1}=y_n+\frac{h}{12}(5f_{n+1}+8f_n-f_{n-1})</script></li><li><p>AM三步法</p><script type="math/tex; mode=display">y_{n+1}=y_n+\frac{h}{24}(9f_{n+1}+19f_n-5f_{n-1}+f_{n-2})</script></li></ul><h6 id="对隐式法-AB法-Euler法的一点点讨论"><a href="#对隐式法-AB法-Euler法的一点点讨论" class="headerlink" title="对隐式法,AB法,Euler法的一点点讨论"></a>对隐式法,AB法,Euler法的一点点讨论</h6><p>AM隐式法不能直接使用,但是AB和Euler 方法可以直接使用,尔后用AM法进行矫正。</p><p>有一个常用的这样的算法是AB四步法和AM三步法的结合</p><h6 id="改进Euler方法-梯形公式"><a href="#改进Euler方法-梯形公式" class="headerlink" title="改进Euler方法-梯形公式"></a>改进Euler方法-梯形公式</h6><script type="math/tex; mode=display">y_{n+1}=y_n+hf_n\\y_{n+1}=y_n+h\frac{1}{2}(f_{n+1}+f_n)</script><p>第一步是预估,第二步是矫正</p><h6 id="Rung-kutta算法"><a href="#Rung-kutta算法" class="headerlink" title="Rung-kutta算法"></a>Rung-kutta算法</h6><ul><li><p>基本思想</p><script type="math/tex; mode=display">y_{n+1}=y_n+h\Sigma_{i=1}^{N}\lambda_iK_1\\K_1=f(x_n,y_n)\\K_i=f(x_n+hc_i,y_n+hc_i(\Sigma_{j=1}^{i-1}a_{ij}K_j))</script><p>对上面的式子进行taylor展开,要求尽可能多的项数和级数相同。</p></li><li><p>二阶</p><script type="math/tex; mode=display">y_{n+1}=y_n+\frac{h}{2}K_1+\frac{h}{2}K_2\\K_1=f(x_n,y_n)\\K_2=f(x_n+h,y_n+hK_1)</script></li><li><p>三阶</p><script type="math/tex; mode=display">\begin{aligned}&y_{n+1}=y_n+\frac{h}{6}(K_1+4K_2+K_3)\\&K_1=f(x_n,y_n)\\&K_2=f(x_n+\frac{h}{2},y_n+h\frac{K_1}{2})\\&K_3=f(x_n+h,y_n+h(-K_1+2K_2))\end{aligned}</script></li><li><p>四阶(认为是最常用的方法)</p><script type="math/tex; mode=display">\begin{aligned}&y_{n+1}=y_n+\frac{h}{6}(K_1+2K_2+2K_3+K_4)\\&K_1=f(x_n,y_n)\\&K_2=f(x_n+\frac{h}{2},y_n+\frac{h}{2}K_1)\\&K_3=f(x_n+\frac{h}{2},y_n+\frac{h}{2}K_2)\\&K_4=f(x_n+h,y_n+hK_3)\end{aligned}</script></li><li><p>注:对于多因变量(比如$y_1,y_2,y_3$),是类似的。</p></li></ul><h6 id="稳定性问题"><a href="#稳定性问题" class="headerlink" title="稳定性问题"></a>稳定性问题</h6><p>取实验方程</p><script type="math/tex; mode=display">y'=\lambda y</script><p>假设在$y_n$引入了误差$\rho_n$,如果在后面误差绝对值不增加,就说这个数值方法对步长h和$\lambda$常数是稳定的。步长h和$\lambda$有其相应的允许范围,叫做该方法的绝对稳定区域。</p><ul><li>对于四阶RK算法$\frac{dy}{dx}=\lambda y$<script type="math/tex; mode=display">\rho_{n+1}=[1+(h\lambda)+\frac{(h\lambda)^2}{2!}+\frac{(h\lambda)^3}{3!}+\frac{(h\lambda)^4}{4!}]\rho_n</script>容易得到稳定区域是$\lambda h\in(-2.78,0)$<h6 id="常微分方程的numerov算法"><a href="#常微分方程的numerov算法" class="headerlink" title="常微分方程的numerov算法"></a>常微分方程的numerov算法</h6></li></ul><p>这个算法只能用于特定的微分方程。(很多时候K写为了$k^2$)  </p><script type="math/tex; mode=display">\frac{d^2y}{dx^2}+K(x)y=S(x)</script><p>利用二阶导数的差分公式</p><script type="math/tex; mode=display">\frac{y_{n+1}+y_{n-1}-2y_n}{h^2}=\frac{2\frac{1}{2}y^{(2)}h^2+O(h^4)}{h^2}=\frac{2\frac{1}{2}y^{(2)}h^2+2\frac{1}{4!}y^{(4)}h^4+O(h^6)}{h^2}</script><p>对微分方程求导:</p><script type="math/tex; mode=display">\begin{aligned}\frac{d^4y}{dx^4}&=\frac{d^2(S(x)-K(x)y)}{dx^2}\\&=\frac{S_{n+1}+S_{n-1}-2S_n}{h^2}-\frac{K_{n+1}y_{n+1}+K_{n-1}y_{n-1}-2K_{n}y_n}{h^2}+O(h^4)\end{aligned}</script><p>而:</p><script type="math/tex; mode=display">\begin{aligned}S_n-K_ny_n=&\frac{y_{n+1}+y_{n-1}-2y_n}{h^2}\\&-\frac{1}{12}(S_{n+1}+S_{n-1}-2S_n-K_{n+1}y_{n+1}-K_{n-1}y_{n-1}+2K_{n}y_n)\\&+O(h^4)\end{aligned}</script><p>可以将上式写为$y_{n+1},y_{n-1},y_n$的递推关系</p><script type="math/tex; mode=display">\begin{aligned}y_{n+1}&(1+\frac{1}{12}h^2K_{n+1})+y_{n-1}(1+\frac{1}{12}h^2K_{n-1})+2y_n(-1+\frac{5}{12}h^2K_n)\\&=\frac{h^2}{12}(S_{n+1}+10S_n+S_{n-1})\end{aligned}</script><p>这个解法不可以自启动,一般设置启动点的方法是泰勒级数法。</p><script type="math/tex; mode=display">y_1=y_0+hy_0'+\frac{1}{2}h^2y_0''</script><h3 id="第三章-常微分方程的边值问题与本征值问题"><a href="#第三章-常微分方程的边值问题与本征值问题" class="headerlink" title="第三章-常微分方程的边值问题与本征值问题"></a>第三章-常微分方程的边值问题与本征值问题</h3><h4 id="边值问题的解"><a href="#边值问题的解" class="headerlink" title="边值问题的解"></a>边值问题的解</h4><h5 id="线性边值问题的迭加法"><a href="#线性边值问题的迭加法" class="headerlink" title="线性边值问题的迭加法"></a>线性边值问题的迭加法</h5><p>问题描述</p><script type="math/tex; mode=display">y''=f(x,y,y')</script><p>如果可以写为</p><script type="math/tex; mode=display">y''+p(x)y'+q(x)y=f(x)</script><p>则方程组是线性的。</p><p>如果边值问题可以被描述为$y(x=a)=\alpha,y(x=b)=\beta$,则可以视为两组边值结果线性叠加的效果$(y(a)=\alpha,y’(a)=0,y’’+p(x)y’+q(x)y=f(x));(y(a)=0,y’(a)=1,y’’+p(x)y’+q(x)y=0)$</p><p>将他们的解分别记为$y_1$与$y_2$,则总的解可以写为。</p><script type="math/tex; mode=display">y(x)=y_1(x)+\frac{\beta-y_1(b)}{y_2(b)}y_2(x)</script><h5 id="非线性边值问题的打靶法"><a href="#非线性边值问题的打靶法" class="headerlink" title="非线性边值问题的打靶法"></a>非线性边值问题的打靶法</h5><p>定义初始条件:$y(a)=\alpha,y’(a)=s$,则可以根据常微分方程的初值问题的解法得到$y(b,s)$</p><p>考虑方程</p><script type="math/tex; mode=display">F(s)=y(b,s)-\beta</script><p>求下一个点的公式可以用弦割法:</p><script type="math/tex; mode=display">s_{k+1} = s_{k}-\frac{s_k-s_{k-1}}{y(b,s_k)-y(b,s_{k-1})}(y(b,s)-\beta)</script><ol><li>给定初始点的斜率猜测值S1；</li><li>用常微分方程的初值问题解法（如RK算法）求解y(b,S1);</li><li>给出另一个斜率猜测值S2作为弦割法的第二个启动点;</li><li>用常微分方程的初值问题解法（如RK算法）求解y(b,S2);</li><li>IF (abs(y(b,S1)-y(b))&lt;精度  ), y(x)=y(x,S1);</li><li>IF (abs(y(b,S2)-y(b))&lt;精度  ), y(x)=y(x,S2); else</li><li>利用弦割法迭代公式求出下一个斜率S3；</li><li>用常微分方程的初值问题解法（如RK算法）求解y(b,S3);</li><li>IF (abs(y(b,S3)-y(b))&lt;精度  ), y(x)=y(x,S3); else<br> S1=S2; S2=S3；回到第7步</li><li>得到边值问题的解y(x)=y(x,S3);</li></ol><ul><li>三类边值问题对应打靶法的参数选取<ul><li>第一类边值问题$y(a)=\alpha,y(b)=\beta$,显而易见,取$y’(a)=s$为参数</li><li>第二类边值问题$y’(a)=\alpha,y’(b)=\beta$,取$y(a)$为参数</li><li>第三类边值问题$y’(a)=\beta_0+\alpha_0y(a),y’(b)=\beta_1+\alpha_1y(b)$可以将$y(a)$取为参数$y_0$,则$y’(a)=\beta_0+\alpha_0y_0$</li></ul></li></ul><h5 id="线性常微分方程的差分方法"><a href="#线性常微分方程的差分方法" class="headerlink" title="线性常微分方程的差分方法"></a>线性常微分方程的差分方法</h5><script type="math/tex; mode=display">y''+p(x)y'+q(x)y=f(x)</script><p>将差分表示的微商带入</p><script type="math/tex; mode=display">\frac{y_{n+1}+y_{n-1}-2y_n}{h^2}+p(x_n)\frac{y_{n+1}-y_{n-1}}{2h}+q(x_n)y_n=f(x)</script><p>即</p><script type="math/tex; mode=display">y_{n-1}(2-hp(x_n))+y_n(-4+2h^2q(x_n))+y_{n+1}(2+hp(x_n))=2h^2f(x_n)</script><p>考虑 $y_0,y_1…y_{n-1}$ (n-1)个点,与n-1个方程</p><script type="math/tex; mode=display">\begin{equation}\begin{aligned}\begin{bmatrix}2-hp_1 & -4+2h^2q_1 & 2+hp_1 &  ... & ...  & ...  \\... & 2-hp_2 & -4+2h^2q_2 &  2+hp_2 & ...  & ...  \\... & ... & ... &  ... & ...  & ...  \\... & ... & ... &  ... & ...  & ...  \\... & ... &... & 2-hp_{n-1}  & -4+2h^2q_{n-1}  & 2-hp_{n-1}  \\\end{bmatrix}\begin{bmatrix}y_0\\y_1\\...\\y_{n-1}\\y_{n}\end{bmatrix}\\=\begin{bmatrix}2h^2f_0\\2h^2f_1\\...\\2h^2f_{n-1}\\2h^2f_{n}\end{bmatrix}\end{aligned}\end{equation}</script><p>但是有n+1个未知数,需要再带上两个边界的方程。总之就是把上面的矩阵扩展为方形。</p><h4 id="本征值问题的解"><a href="#本征值问题的解" class="headerlink" title="本征值问题的解:"></a>本征值问题的解:</h4><p>比如说波动方程的分离变量后的空间部分</p><script type="math/tex; mode=display">y''-k^2y=0</script><p>可以取初始条件$y(x=0)=\alpha,y’(x=0)=\delta$.$\delta$实际上可以随便取值…..因为方程是其次的,而且在边界点的函数值刚好是0。然后就用二分法的打靶法,将k设置为参量,即可。</p><h5 id="求解薛定谔方程的本征值问题"><a href="#求解薛定谔方程的本征值问题" class="headerlink" title="求解薛定谔方程的本征值问题"></a>求解薛定谔方程的本征值问题</h5><p>$schr\ddot{o}dinger$ -Equation一般表示为:</p><script type="math/tex; mode=display">\begin{align*}\frac{\partial^2}{\partial x^2}\psi(x)+\frac{2m}{\hbar^2}(E-V(x))\psi=0\\\frac{\partial^2}{\partial x^2}\psi(x)+(\epsilon-v(x))\psi=0\end{align*}</script><p>其中,$\epsilon = \frac{2m}{\hbar^2}E$, $v(x)=\frac{2m}{\hbar^2}V(x)$.<br>一般认为这类方程只在一定的区间内需要被考虑,比如说$[x_{min},x_{max}]$,在这个区间之外,一般认为$v(x)\to +\infty$ , 所以相当于波函数就是0了。而在这个区间内,我们经常把势能写成一个凹函数,并且满足$v(x_{min})=v(x_{max})=0$。我们一般考虑束缚态,这样E&lt;0。这样，满足$E-V(x)$的区间我们可以标记为$[x_{m1},x_{m2}]$。<br>我们的解法是分别给定初值条件:</p><script type="math/tex; mode=display">\begin{align} \begin{cases} \psi_{<}(x_{min})=0\\ \frac{\partial}{\partial x}\psi_{<}(x_{min})=\delta\end{cases}\\ \begin{cases} \psi_{>}(x_{\max})=0\\ \frac{\partial}{\partial x}\psi_{>}(x_{max})=\delta'\end{cases}\end{align}</script><p>这样可以得到两个解$\psi_{&lt;}(x)$和$\psi_{&gt;}(x)$。我们要做的具体工作是: 先设定本征值,解出两个解,再对其中一个乘以系数,使得他们在$\psi(x_{m1})$处的函数值相等,然后再用向后差分的方法,对比两者再$x_{m1}$点的一阶导数是否一样,如果一样,就认为这个本征值就是方程的本征值。</p><h3 id="第四章-偏微分方程的数值求解"><a href="#第四章-偏微分方程的数值求解" class="headerlink" title="第四章 偏微分方程的数值求解"></a>第四章 偏微分方程的数值求解</h3><h4 id="偏微分方程的分类"><a href="#偏微分方程的分类" class="headerlink" title="偏微分方程的分类"></a>偏微分方程的分类</h4><p>二阶偏微分方程常见的形式可以写为</p><script type="math/tex; mode=display">AU_{xx}+2BU_{xy}+CU_{yy}+DU_x+EU_y+FU=0</script><p>其中,$A,B,C$为参数且取决于x,y。<br>如果再xy平面上有$A^2+B^2+C^2&gt;0$ ,则该偏微分方程再该平面上为二阶偏微分方程。</p><ul><li>如果$B^2-AC&lt;0$, 则为椭圆形方程。</li><li>如果$B^2-AC=0$, 则为抛物型方程。</li><li>如果$B^2-AC&gt;0$, 则为双曲型方程。<h4 id="椭圆形方程的求解"><a href="#椭圆形方程的求解" class="headerlink" title="椭圆形方程的求解"></a>椭圆形方程的求解</h4><h5 id="什么是椭圆形方程"><a href="#什么是椭圆形方程" class="headerlink" title="什么是椭圆形方程"></a>什么是椭圆形方程</h5>Poisson方程在这里实际上是椭圆形方程的代表<br>Possion方程可以写为:<script type="math/tex; mode=display">\Delta u = \nabla^2(u)=\frac{\partial^2u}{\partial x^2} +\frac{\partial^2u}{\partial y^2}=S(x,y)</script><h5 id="Jacobi-迭代法"><a href="#Jacobi-迭代法" class="headerlink" title="Jacobi 迭代法"></a>Jacobi 迭代法</h5>将空间划分为一些格点$u_{i,j}$用来表示x方向第i个, y方向第j个格点。<br>先假设u有一个分布叫做$u^0$, 利用差分法,迭代得到下一次的分布。<script type="math/tex; mode=display">\frac{u_{i+1,j}^n+u_{i-1,j}^n-2u_{i,j}^{n+1}}{h_1^2}+\frac{u_{i,j+1}^n+u_{i,j-1}^n-2u_{i,j}^{n+1}}{h_2^2}=S_{i,j}^n</script>上面的式子中,n代表上一次的分布,n+1代表下一次的分布,理论上,当迭代前后在一个格点上函数值没有变化时，说明找到了possion方程的解。<br>将上面的式子化简之后得到的式子是:<script type="math/tex; mode=display">u_{i,j}^{n+1}=(\frac{u_{i+1,j}^n+u_{i-1,j}^n}{h_1^2}+\frac{u_{i,j+1}^n+u_{i,j-1}^n}{h_2^2}-S_{i,j}^n)\frac{1}{\frac{2}{h_1^2}+\frac{2}{h_2^2}}\tag{1}</script><h5 id="Gauss-Seidel松弛迭代法"><a href="#Gauss-Seidel松弛迭代法" class="headerlink" title="Gauss-Seidel松弛迭代法"></a>Gauss-Seidel松弛迭代法</h5>在[[计算物理#Jacobi 迭代法|Jacobi迭代法]],我们在迭代生成$u^{n+1}_{i,j}$时,实际上已经有算出$u_{i-1,j}^{n+1},u_{i,j-1}^{n+1}$。在这样的情况下,我们可以用已经算出来的函数值来修正Jacobi迭代法。<br>按照这个思想, 迭代后的函数值可以表示为:<script type="math/tex; mode=display">\begin{aligned}u_{i,j}^{n+1}=(1-w)(\frac{u_{i+1,j}^n+u_{i-1,j}^n}{h_1^2}+\frac{u_{i,j+1}^n+u_{i,j-1}^n}{h_2^2}-S_{i,j}^n)\frac{1}{\frac{2}{h_1^2}+\frac{2}{h_2^2}}+\\w(\frac{u_{i+1,j}^n+u_{i-1,j}^{n+1}}{h_1^2}+\frac{u_{i,j+1}^n+u_{i,j-1}^{n+1}}{h_2^2}-S_{i,j}^n)\frac{1}{\frac{2}{h_1^2}+\frac{2}{h_2^2}}\end{aligned}</script><h4 id="抛物型方程的求解"><a href="#抛物型方程的求解" class="headerlink" title="抛物型方程的求解"></a>抛物型方程的求解</h4><h5 id="什么是抛物型方程"><a href="#什么是抛物型方程" class="headerlink" title="什么是抛物型方程"></a>什么是抛物型方程</h5><strong>传导问题</strong>的<strong>扩散方程</strong>是典型的抛物型方程。<br>方程的形式一般为:<script type="math/tex; mode=display">\frac{\partial\Phi}{\partial t}=\frac{\partial^2\Phi}{\partial x^2}+S(x,t)</script><h5 id="显式差分法"><a href="#显式差分法" class="headerlink" title="显式差分法"></a>显式差分法</h5>下面的式子中的下角标代表着坐标空间(实际上就是坐标),上角标代表着时间空间(代表着时间)。<script type="math/tex; mode=display">\begin{aligned}\frac{\Phi_i^{n+1}-\Phi_{i}^{n}}{\Delta t}=\frac{\Phi^n_{i+1}+\Phi^{n}_{i-1}-2\Phi_i^n}{h^2}+S^n\end{aligned}</script><script type="math/tex; mode=display">\Phi_i^{n+1}=\Phi_i^n+\frac{\Delta t}{h^2}(\Phi^n_{i+1}+\Phi_{i-1}^n-\Phi_i^n)+\Delta tS_i^n</script>有时候可以用一个简写方法:<script type="math/tex; mode=display">(\delta^2\Phi^n)_i=\Phi^n_{i+1}+\Phi^{n}_{i-1}-2\Phi_i^n</script><h5 id="隐式差分法"><a href="#隐式差分法" class="headerlink" title="隐式差分法"></a>隐式差分法</h5><script type="math/tex; mode=display">\begin{aligned}\frac{\Phi_i^{n+1}-\Phi_{i}^{n}}{\Delta t}=\frac{\Phi^{n+1}_{i+1}+\Phi^{n+1}_{i-1}-2\Phi_i^{n+1}}{h^2}+S^n_i\end{aligned}</script>化简得到方程:( $r=\frac{\Delta t}{h^2}$ ) <script type="math/tex; mode=display">-r\Phi_{i-1}^{n+1}+(1+2r)\Phi_i^{n+1}-r\Phi_{i+1}^{n+1}=\Phi_i^n+S_i^n\Delta t</script>这样,如果知道了n对应的时间的分布(不同i对应的函数值), 那么可以列线性方程组求解下一时刻的函数值。<br><strong>这个好像只适用于给定了第一类边界条件的情况</strong>。就是给定边界的函数值。<br>如果给定了边界的值，假如说x方向分为了N+1个格点, 第一个和最后一个格点的值已经知道了,那么可以列出一组线性方程。<script type="math/tex; mode=display">\begin{bmatrix}1+2r & -r \\-r & 1+2r&-r\\ ...&...&...&...&...&...\\...&...&...&...&...&...\\...&...&...&...&-r&1+2r\\ \end{bmatrix}\begin{bmatrix}\Phi_1^{n+1}\\\Phi_2^{n+1}\\ ..\\.. \\\Phi_{N-1}^{n+1}\end{bmatrix}=\begin{bmatrix}\Phi^n_{1}+S_{1}^n\Delta t+r\Phi_0^{n+1}\\ \Phi^n_{2}+S_{2}^n\Delta t \\ \\ \\ \Phi^n_{N-1}+S_{N-1}^n\Delta t+r\Phi_N^{n+1}\end{bmatrix}</script></li></ul><h5 id="平均隐式差分法Crank-Nicolson"><a href="#平均隐式差分法Crank-Nicolson" class="headerlink" title="平均隐式差分法Crank-Nicolson"></a>平均隐式差分法Crank-Nicolson</h5><p>类似于隐士差分法,将输运方程的空间二阶导项写为新旧时刻所得值的结合。</p><script type="math/tex; mode=display">\begin{aligned}\frac{\Phi_i^{n+1}-\Phi_{i}^{n}}{\Delta t}=(\frac{1}{2}(\Phi^{n+1}_{i+1}+\Phi^{n+1}_{i-1}-2\Phi_i^{n+1})+\frac{1}{2}(\Phi^{n}_{i+1}+\Phi^{n}_{i-1}-2\Phi_i^{n}))\frac{1}{h^2}+S^n_i\end{aligned}</script><p>类似于隐式差分,得到一组线性方程</p><script type="math/tex; mode=display">\begin{aligned}&\begin{bmatrix}1+r & -r/2 \\-r/2 & 1+r&-r/2\\ ...&...&...&...&...&...\\...&...&...&...&...&...\\...&...&...&...&-r/2&1+r\\ \end{bmatrix}\begin{bmatrix}\Phi_1^{n+1}\\\Phi_2^{n+1}\\ ..\\.. \\\Phi_{N-1}^{n+1}\end{bmatrix}\\&\quad\quad=\begin{bmatrix}\frac{1}{2}r\Phi_0^n+(1-r)\Phi^n_{1}+\frac{1}{2}r\Phi_2^n+S_{1}^n\Delta t+\frac{r}{2}\Phi_0^{n+1}\\ \frac{1}{2}r\Phi_1^n+(1-r)\Phi^n_{2}+\frac{1}{2}r\Phi_3^n+S_{2}^n\Delta t \\ \\ \\ \frac{1}{2}r\Phi_{N-2}^n+(1-r)\Phi^n_{N-1}+\frac{1}{2}r\Phi_N^n+S_{N-1}^n\Delta t+\frac{r}{2}\Phi_N^{n+1}\end{bmatrix}\end{aligned}</script><h5 id="算符表示的平均隐式差分法-Crank-Nicolson-方法求解schrodinger方程"><a href="#算符表示的平均隐式差分法-Crank-Nicolson-方法求解schrodinger方程" class="headerlink" title="算符表示的平均隐式差分法(Crank-Nicolson)方法求解schrodinger方程"></a>算符表示的平均隐式差分法(Crank-Nicolson)方法求解schrodinger方程</h5><p>我们的schrodinger方程</p><script type="math/tex; mode=display">i\hbar\frac{\partial }{\partial t}\Phi=-\frac{\hbar^2}{2m}\nabla^2\Phi+V\Phi</script><p>如果取常数$\hbar=1,2m=1$<br>定义算符</p><script type="math/tex; mode=display">H\Phi_i^n=-\frac{1}{h^2}(\Phi_{i+1}^n+\Phi_{i-1}^n-2\Phi_i^n)+V_i\Phi_i^n</script><p>Schrodinger方程可以写为(用了隐式差分法)</p><script type="math/tex; mode=display">\frac{\Phi_i^{n+1}-\Phi_i^{n}}{\Delta t}=-i\frac{H}{2}\Phi^{n+1}_{i}-i\frac{H}{2}\Phi^n_{i}</script><p>上面的式子可以写为</p><script type="math/tex; mode=display">\begin{aligned}\Phi_i^{n+1}&=\frac{1-\frac{i}{2}H\Delta t}{1+\frac{i}{2}H\Delta t}\Phi_i^{n}\\\Phi_i^{n+1}&=(\frac{2}{1+\frac{i}{2}H\Delta t}-1)\Phi_i^n\end{aligned}</script><p>如果再定义一个辅助变量:</p><script type="math/tex; mode=display">\chi_i^n=\frac{2}{1+\frac{i}{2}H\Delta t}\Phi_i^n</script><p>则有方程</p><script type="math/tex; mode=display">\begin{aligned}\chi_{i-1}^n+(-2+i\frac{2h^2}{\Delta t}-h^2V_i)\chi_i^n+\chi_{i+1}^n=i\frac{4h^2}{\Delta t}\Phi_i^n\\\Phi_{i}^{n+1}=\chi_i^n-\Phi_i^n\end{aligned}</script><p>辅助变量的边界条件定义为$\chi_0=\chi_N=0$ 。<br>辅助变量对应的方程组。</p><script type="math/tex; mode=display">\begin{bmatrix}r_1 & 1 \\1 & r_2&1\\ ...&...&...&...&...&...\\...&...&...&...&...&...\\...&...&...&...&1&r_{N-1}\\ \end{bmatrix}\begin{bmatrix}\chi_1^{n}\\\chi_2^{n}\\ ..\\.. \\\chi_{N-1}^{n}\end{bmatrix}=\begin{bmatrix}i\frac{4h^2}{\Delta t}\Phi_1^n-\chi_0^n\\ i\frac{4h^2}{\Delta t}\Phi_2^n\\..\\..\\ i\frac{4h^2}{\Delta t}\Phi_{N-1}^n-\chi_N^n\end{bmatrix}</script><h3 id="第六章分子动力学"><a href="#第六章分子动力学" class="headerlink" title="第六章分子动力学"></a>第六章分子动力学</h3><h4 id="Verlet算法"><a href="#Verlet算法" class="headerlink" title="Verlet算法"></a>Verlet算法</h4><p>算是分子动力学中的最核心的算法了吧。<br>有两种:</p><ul><li>速度verlet算法</li><li>L.verlet算法<h5 id="L-verlet算法"><a href="#L-verlet算法" class="headerlink" title="L.verlet算法"></a>L.verlet算法</h5>牛顿第二定理<script type="math/tex; mode=display">\frac{d^2r}{dt^2}=\frac{F(t)}{m}</script>利用三点法改写等式左端。同时速度用前后差分法来确定。<script type="math/tex; mode=display">\begin{aligned}\frac{r(t+h)+r(t-h)-2r(t)}{h^2}&=F(t)/m\\r(t+h)&=2r(t)-r(t-h)+h^2\frac{F(t)}{m}+O(h^4)\\P(t)&=\frac{m}{2h}(r(t+h)-r(t-h))+O(h^2)\end{aligned}</script>这种算法需要两个启动点,速度方面不需要启动点。<h5 id="速度verlet算法"><a href="#速度verlet算法" class="headerlink" title="速度verlet算法"></a>速度verlet算法</h5>这个是最常用的verlet 算法。<br>利用匀加速运动的位移公式<script type="math/tex; mode=display">\begin{aligned}r(t+h)=r(t)+hv(t)+\frac{h^2}{2}\frac{F(t)}{m}\\r(t-h)=r(t)-hv(t)+\frac{h^2}{2}\frac{F(t)}{m}\end{aligned}</script>将第二个式子的时间向前推进h。<script type="math/tex; mode=display">r(t)=r(t+h)-hv(t+h)+\frac{h^2}{2}\frac{F(t+h)}{m}</script>这个式子和第一个式子相加,可以得到速度的递推公式, 同时坐标的地推公式就用简单的匀加速运动的公式。<script type="math/tex; mode=display">\begin{aligned}r(t+h)= r(t)+hv(t)+\frac{h^2}{2}\frac{F(t)}{m}\\v(t+h)=v(t)+h\frac{F(t)+F(t+h)}{2m}\end{aligned}</script>上面的两个公式就是最常用的速度verlet算法。<h4 id="边界条件"><a href="#边界条件" class="headerlink" title="边界条件"></a>边界条件</h4>一般采用的是周期性边界条件,如果A是任意客观测量则周期边界条件的表达式为:<script type="math/tex; mode=display">A(\vec{x})=A(\vec{x}+\vec{n}L)</script><h4 id="模拟流程"><a href="#模拟流程" class="headerlink" title="模拟流程"></a>模拟流程</h4>主要就是一点….对温度定义<script type="math/tex; mode=display">T= \frac{\bar{E_k}}{\frac{d}{2}Nk_B}</script></li></ul><h3 id="蒙特卡洛方法"><a href="#蒙特卡洛方法" class="headerlink" title="蒙特卡洛方法"></a>蒙特卡洛方法</h3><h4 id="蒙特卡洛方法算积分-重要抽样法"><a href="#蒙特卡洛方法算积分-重要抽样法" class="headerlink" title="蒙特卡洛方法算积分, 重要抽样法"></a>蒙特卡洛方法算积分, 重要抽样法</h4><p>考察积分,按照蒙特卡洛方法的思想,我们想随机抽取x，然后得到被积函数的抽样平均值认为这就是被积函数在这个区间上的平均值。<br>由于f(x)的函数值随着x的变化起伏比较大, 会使得计算误差大。</p><script type="math/tex; mode=display">I = \int_0^xf(x')dx'</script><p>做变量代换<br>后的积分可以写为</p><script type="math/tex; mode=display">I = \int_0^x\frac{f(x')}{w(x')}w(x')dx'</script><p>如果取$y(x)=\int_0^xw(x’)dx’$,并且要求$\int_0^xw(x’)dx’=1$</p><script type="math/tex; mode=display">I = \int_0^1\frac{f(x'(y))}{w(x'(y))}dy</script><p>至此相当于对积分做了一次积分变换。<br>然后我们在$[0,1]$的区间抽取N个样本y, 把样本叫做$y_i,y_i\in[0,1]$。则积分可以表示为</p><script type="math/tex; mode=display">I = \frac{1}{N} \Sigma_1^N \frac{f(x'(y_i))}{w(x'(y_i))}</script><p>这个积分方法就叫做重要抽样法。<br><strong>解释这个方法为什么是对的</strong> ,这段话是定性的。<br>当N很大是,可以看做$y_i$在$[0,1]$上面均匀分布。在区间$y\to y+dy$内, $y_i$落入其中的概率(<strong>的期望</strong>)为$\frac{dy}{1}$, 也就是说, 抽到应变量为$\frac{f(x’(y))}{w(x’(y))}$,(<strong>严格来讲应该是$\frac{f(x’(y+\epsilon dy))}{w(x’(y+\epsilon dy))}$</strong>)的概率(<strong>的期望</strong>)为$dy$。(<strong>求和化为积分的具体过程</strong>)那么,遍历整个积分区间$[0,1]$。积分是抽取到应变量的平均值也是积分值。</p><h4 id="重要抽样法的数值方法1-差分方法"><a href="#重要抽样法的数值方法1-差分方法" class="headerlink" title="重要抽样法的数值方法1,差分方法"></a>重要抽样法的数值方法1,差分方法</h4><p>当我们选取的函数$w(x)$不方便积分时, 重要抽样法就难以进行。<br>在$[0,1]$的区间中选取$M+1$个y点。可以表示为$y^{i}=\frac{i}{M},i\in\{0,1…,M\}$。 由于</p><script type="math/tex; mode=display">\frac{dy}{dx} = w(x)</script><p>化简为差分方程</p><script type="math/tex; mode=display">\frac{y^{i+1}-y^{i}}{x^{i+1}-x^i}=w(x^i)</script><script type="math/tex; mode=display">x^{i+1}=x^i+\frac{1}{Mw(x^i)}</script><p>利用上面的递推关系,结合起始点$x^0=0$，可以得到$x^i$的具体值。<br><strong>当然,选取w(x)时, 这里默认是保证了$\int_0^xw(x’)dx’=1$</strong></p><h4 id="蒙特卡洛方法的数值方法2-Von-Neumann-舍选法"><a href="#蒙特卡洛方法的数值方法2-Von-Neumann-舍选法" class="headerlink" title="蒙特卡洛方法的数值方法2, Von_Neumann 舍选法"></a>蒙特卡洛方法的数值方法2, Von_Neumann 舍选法</h4><p>我们想让抽取的x样本随x的分布按照$w(x)$进行。选取函数$w’(x)$,满足$w’(x)&gt;w(x)$。<br>这个抽样这样进行:</p><ol><li>在区间$[0,x]$中抽取随机数$x_i$</li><li>计算$w’(x_i)$和$w(x_i)$。</li><li>在区间$[0,1]$之间生成随机数$\eta$ </li><li>比较$\frac{w(x_i)}{w’(x_i)}$和$\eta$ </li><li>若$\frac{w(x_i)}{w’(x_i)}&gt;\eta$则这个$x_i$保留, 否则再抽取下一个$x_i$<br>实际操作时候$w’(x)=max_{x’\in [0,x]} w(x’)$ 是一个常数。<br>按照这个流程,保留下来的$x_i$都倾向于集中在$w(x_i)$大的地方。<br><strong>当然,选取w(x)时, 这里默认是保证了$\int_0^xw(x’)dx’=1$</strong></li></ol><h4 id="重要抽样法计算多维积分-metropolis方法"><a href="#重要抽样法计算多维积分-metropolis方法" class="headerlink" title="重要抽样法计算多维积分, metropolis方法"></a>重要抽样法计算多维积分, metropolis方法</h4><p>在多维空间中,这样选取随机点。</p><ol><li>确定空间中的重要性函数w(X)。</li><li>确定起始点$X_0$, 这个是一个列向量,或者说是一个坐标</li><li>下一步$X_{i+1}=X_i+\delta_r$。 其中$\delta_r$是指对于X的每一个坐标都变化一个在$[-\delta,\delta]$中的随机数。</li><li>在$[0,1]$中选取一个随机数 $\eta$, 如果$\frac{w(X_{i+1})}{w(X_i)}&gt;\eta$则保留$X_{i+1}$。否则$X_{i+1}=X_i$<br>按照这个方法选取的随机数会倾向于到$w(X)$大的地方去。<br><strong>当然,选取w(x)时, 这里默认是保证了$\int_0^xw(x’)dx’=1$</strong></li></ol><ul><li>一个metropolis方法的例子(matlab)<br>  是老师写的程序, 这个程序考察了规定重要性$w(x)=\frac{6}{5}(1-\frac{1}{2}x^2)$ 。第一个点取的是$x=0.9$, 然后将随机取得点的分布画出来和$w(x)$进行对比。<br>  但是实际上这个程序没有体现出metropolis方法中的”行走”。<br>  fxt的代码是这样处理行走中的边界问题的。(见下一段代码),对游走的点分了类，边界的点有相应的游走步长。<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">function metropolis_2</span><br><span class="line">clear all</span><br><span class="line">close all</span><br><span class="line">clc</span><br><span class="line"></span><br><span class="line"><span class="attribute">x1</span>=0.9;</span><br><span class="line"><span class="attribute">delta</span>=5.5;</span><br><span class="line"><span class="attribute">w</span>=@(x1) 6/5*(1-0.5*x1.^2); %概率密度函数，与例题8相同</span><br><span class="line"></span><br><span class="line"><span class="attribute">n</span>=0;</span><br><span class="line"><span class="attribute">N</span>=5e5;</span><br><span class="line"><span class="keyword">for</span> <span class="attribute">i</span>=1:N</span><br><span class="line">    [x1]=my_metropolis(x1,delta,w);</span><br><span class="line">    <span class="attribute">n</span>=n+1;</span><br><span class="line">    xx(n)=x1; %将经历的x1值存储起来 </span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">%下面的程序判断metropolis算法生成的随机数分布是否符合分布函数</span><br><span class="line">%========================================================</span><br><span class="line"><span class="attribute">Num</span>=201;                                                %区间大小</span><br><span class="line"><span class="attribute">Max</span>=max(abs(xx))+10^-9                    %边界</span><br><span class="line"><span class="attribute">Min</span>=min(xx)*1.0                      %边界</span><br><span class="line"><span class="attribute">y</span>=zeros(1,Num);</span><br><span class="line"><span class="attribute">x</span>=linspace(Min,Max,Num);</span><br><span class="line"><span class="attribute">h</span>=x(2)-x(1);</span><br><span class="line"><span class="keyword">for</span> <span class="attribute">i</span>=1:length(xx)</span><br><span class="line">    <span class="attribute">index</span>=fix((xx(i)-Min)/h)+1; %判定xx(i)处于哪个子区间，fix为舍去小数取整运算</span><br><span class="line">    y(index)=y(index)+1;          %该子区间的随机数数目+1</span><br><span class="line">end</span><br><span class="line"><span class="attribute">f</span>=@(x1) 6/5*(1-0.5*x1.^2);            %精确值绘图</span><br><span class="line">figure,fplot(f,[Min,Max],<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">hold on;</span><br><span class="line"><span class="attribute">S</span>=interg(Min,Max,f)</span><br><span class="line"><span class="attribute">y</span>=y/length(xx)/h*S;  %生成的随机数的数目为n(length(xx))，走的总步数为N</span><br><span class="line">plot(x(1:Num-1),y(1:Num-1),<span class="string">&#x27;-*&#x27;</span>);title(<span class="string">&#x27;验证随机数的分布&#x27;</span>);</span><br><span class="line">legend(<span class="string">&#x27;精确分布&#x27;</span>,<span class="string">&#x27;随机数的分布&#x27;</span>)</span><br><span class="line">hold off</span><br><span class="line"></span><br><span class="line">function <span class="attribute">S</span>=interg(a,b,w) %w函数在[a,b]上的积分 </span><br><span class="line">    <span class="attribute">n</span>=10000;</span><br><span class="line">    h=(b-a)/n;</span><br><span class="line">    <span class="attribute">xx_h</span>=a:h:b;</span><br><span class="line">    <span class="attribute">ww</span>=w(xx_h);</span><br><span class="line">    %<span class="attribute">S</span>=sum(w(xx_h).*(b-a)/n)-w(a)*(b-a)/2/n-w(b)*(b-a)/2/n; %梯形算法</span><br><span class="line">    S=(4*sum(ww(2:2:n))+2*sum(ww(3:2:n-1))+ww(1)+ww(n+1))*h/3; %simpson积分公式</span><br><span class="line">%=========================================================================</span><br><span class="line"></span><br><span class="line">function [x1] = my_metropolis(x1,delta,w)</span><br><span class="line"><span class="attribute">x1t</span>=rand; %[0,1]区间产生随机数</span><br><span class="line"><span class="attribute">r</span>=w(x1t)/w(x1);</span><br><span class="line"><span class="keyword">if</span> rand&lt;r;</span><br><span class="line">   <span class="attribute">x1</span>=x1t;    </span><br><span class="line">end</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[xnew,typenew]</span> = <span class="title">MH</span><span class="params">(x,delta,type,w)</span></span></span><br><span class="line"><span class="comment">% Metropolis Hastings Algorithm</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">type</span> == <span class="number">1</span></span><br><span class="line">    xnew = <span class="number">2</span>*delta*<span class="built_in">rand</span> + <span class="number">1</span><span class="number">-2</span>*delta; <span class="comment">% 对于第1类坐标,在[1-2δ,1]均匀分布中选取下一个点</span></span><br><span class="line"><span class="keyword">elseif</span> <span class="built_in">type</span> == <span class="number">2</span></span><br><span class="line">    xnew = <span class="number">2</span>*delta*<span class="built_in">rand</span>; <span class="comment">% 对于第2类坐标,在[0,2δ]均匀分布中选取下一个点</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    xnew = x + delta*(<span class="number">2</span>*<span class="built_in">rand</span><span class="number">-1</span>); <span class="comment">% 对于第3类坐标,在[x-δ,x+δ]均匀分布中选取下一个点</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">typenew = categorize(xnew,delta); <span class="comment">% 记录新点的类型和概率密度</span></span><br><span class="line">r = w(xnew)/w(x);</span><br><span class="line"><span class="keyword">if</span>  <span class="built_in">rand</span> &gt; r</span><br><span class="line">    xnew = x;</span><br><span class="line">    typenew = <span class="built_in">type</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">type</span> = <span class="title">categorize</span><span class="params">(x,delta)</span></span></span><br><span class="line"><span class="comment">% 随机游走者所处位置的分类</span></span><br><span class="line"><span class="keyword">if</span> x+delta &gt; <span class="number">1</span></span><br><span class="line">    <span class="built_in">type</span> = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">elseif</span> x-delta &lt; <span class="number">0</span></span><br><span class="line">    <span class="built_in">type</span> = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">type</span> = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h4 id="蒙特卡洛方法计算Ising-模型"><a href="#蒙特卡洛方法计算Ising-模型" class="headerlink" title="蒙特卡洛方法计算Ising 模型"></a>蒙特卡洛方法计算Ising 模型</h4><ul><li>简单介绍Ising模型<br>  二维Ising模型就是一个$N_x\times N_y=N$的格点每一个格点上面都有一个自旋, 记为$S_{i,j}$<br>  系统有一个哈密顿量可以写为$H = -J\Sigma_{&lt;\alpha \beta&gt;}S_{\alpha}S_{\beta}-B\Sigma_{\alpha}S_{\alpha}$<br>  上面的式子中,$&lt;\alpha \beta&gt;$指的是对所有相邻的连线求和。当然就此可以引入两种边界条件<br>  (周期边界条件, 螺旋边界条件)<br>  一个分布的权重(重要性)$w(S)=\frac{e^{-H(S)}}{Z}$,其中$Z = \Sigma e^{-H(S)}$ 。<br>  二维Ising 模型经过计算可以得到物理量和统计学期望之间的关系。<script type="math/tex; mode=display">\begin{aligned}M &= <\Sigma_{\alpha = 1}^N S_{\alpha}>\\\chi &= <\Sigma_{\alpha = 1}^N S_{\alpha}^2>-<\Sigma_{\alpha = 1}^N S_{\alpha}>^2\\E &= <H(S)>\\C_B &= <H^2>-<H>^2\end{aligned}</script></li></ul><p>Ising 模型用metropolis方法的具体操作</p><ol><li>选择一个初始的S的分布(构型)</li><li>选择一个格点{i,j}。</li><li>改变{i,j}上的自旋(使他反号)</li><li>计算改变后的系统能量$H’=H+(2Jf+B)S_{\alpha}$ ,则改变前后的的权重比值可以写为$r=\frac{w(S’)}{w(S)}=e^{-S_{\alpha}(2Jf+B)}$, 其中$f = (S_{i-1,j}+S_{i+1,j}+S_{i,j+1},S_{i,j-1})$ 。实际上f只能有5个可以取得值(从-4到4,间隔2取值),然后$S_{\alpha}$也只有两个可以取的值，综合来看, r只有十个值，将这十个值提前存储在列表里面可以节省计算时间。</li><li>从$[0,1]$区间里面取值$\eta$,如果$\eta<r$,则认为变化后的分布$S_{i+1}$就是$S_i$翻转了一个自旋；如果$\eta> r$, 则认为$S_{i+1}$就是$S_i$。</li><li>在进行了很多步之后就可以开始计算物理量了。</li></ol><ul><li>下面是Ising模型的例子, 选择格子在水平和竖直方向上的大小都为50，耦合强度和外磁场强度分别为J=0.3， B=0.热化扫描50次（此时不计算可观测量），数据分成10个小组，每组50个样本，每个样本的抽样间隔为5.<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br></pre></td><td class="code"><pre><span class="line">function Exapmple_Ising_model</span><br><span class="line">clear all</span><br><span class="line">close all</span><br><span class="line">clc</span><br><span class="line"></span><br><span class="line"><span class="attribute">NX</span>=6;NY=6; %格子尺寸</span><br><span class="line">J=[0.0:0.05:0.3,0.305:0.005:0.605,0.61:0.05:0.92]; </span><br><span class="line">%耦合强度，并不等间隔的原因是为了加强0.3-0.6段的计算</span><br><span class="line"><span class="attribute">B</span>=0.0;  %外磁场强度</span><br><span class="line"></span><br><span class="line"><span class="attribute">N_therm</span>=50; %热化扫描步数</span><br><span class="line"><span class="attribute">N_group</span>=10; %数据分组数目</span><br><span class="line"><span class="attribute">N_size</span>=50;   %每组样本数</span><br><span class="line"><span class="attribute">N_freq</span>=5;   %抽样间隔步数</span><br><span class="line"></span><br><span class="line"><span class="attribute">S</span>=zeros(NX,NY);</span><br><span class="line">[N,S]=initialize(NX,NY); %初始化格子的自旋</span><br><span class="line"><span class="attribute">S1</span>=S</span><br><span class="line"><span class="keyword">for</span> <span class="attribute">iii</span>=1:length(J)</span><br><span class="line">    <span class="attribute">JJ</span>=J(iii); %依次取不同的J值,即不同的耦合强度</span><br><span class="line">    <span class="attribute">R</span>=zeros(5,2); %R数组用于存放接受概率值，有10个矩阵元，即PPT中的(2)式</span><br><span class="line">    <span class="attribute">R</span>=flip_probs(JJ,B);% %初始化R数组</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> <span class="attribute">i</span>=1:N_therm %做热化扫描</span><br><span class="line">        [S,accept]=thermal_sweep(NX,NY,S,R);</span><br><span class="line">         %accept/N   %反转操作接受率</span><br><span class="line">    end</span><br><span class="line"></span><br><span class="line">    <span class="attribute">S2</span>=S;</span><br><span class="line">    <span class="attribute">Sum_M</span>=0; <span class="attribute">Sum_M2</span>=0; <span class="attribute">Sum_SigM</span>=0; %初始化待求物理量M, E，Chi，CB</span><br><span class="line">    <span class="attribute">Sum_E</span>=0; <span class="attribute">Sum_E2</span>=0; <span class="attribute">Sum_SigE</span>=0;</span><br><span class="line">    <span class="attribute">Sum_Chi</span>=0; <span class="attribute">Sum_Chi2</span>=0;</span><br><span class="line">    <span class="attribute">Sum_CB</span>=0; <span class="attribute">Sum_CB2</span>=0;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> <span class="attribute">igroup</span>=1:N_group</span><br><span class="line">        <span class="attribute">Group_M</span>=0; <span class="attribute">Group_M2</span>=0;</span><br><span class="line">        <span class="attribute">Group_E</span>=0; <span class="attribute">Group_E2</span>=0;</span><br><span class="line">        <span class="keyword">for</span> <span class="attribute">sweep</span>=1:N_size*N_freq  %完成此轮循环，就完成了一组数值的计算</span><br><span class="line">            [S,accept]=thermal_sweep(NX,NY,S,R); %抽样前，先做热化扫描</span><br><span class="line">            %accept/N   %反转操作接受率</span><br><span class="line">            <span class="keyword">if</span> mod(sweep,N_freq)==0</span><br><span class="line">                [Magic,Energy]=Magic_Energy(B,JJ,NX,NY,S); %求出一种情况下的磁化强度和能量E</span><br><span class="line">                %一次抽样，获得M和E</span><br><span class="line">                <span class="attribute">Group_M</span>=Group_M+Magic;</span><br><span class="line">                <span class="attribute">Group_M2</span>=Group_M2+Magic^2;</span><br><span class="line">                <span class="attribute">Group_E</span>=Group_E+Energy;</span><br><span class="line">                <span class="attribute">Group_E2</span>=Group_E2+Energy^2;</span><br><span class="line">            end</span><br><span class="line">        end</span><br><span class="line">    %===================================</span><br><span class="line">        <span class="attribute">Group_M</span>=Group_M/N_size; %组内抽样的平均，即期望值，PPT中的（1）式，教材中的(8.21a)</span><br><span class="line">        <span class="attribute">Group_M2</span>=Group_M2/N_size;</span><br><span class="line">        <span class="attribute">Group_E</span>=Group_E/N_size;</span><br><span class="line">        <span class="attribute">Group_E2</span>=Group_E2/N_size;</span><br><span class="line">        <span class="attribute">Chi</span>=Group_M2-Group_M^2; %(8.21b),一个组里面求得的磁化率</span><br><span class="line">        <span class="attribute">CB</span>=Group_E2-Group_E^2;  %(8.21d)</span><br><span class="line"></span><br><span class="line">        <span class="attribute">Sum_M</span>=Sum_M+Group_M;</span><br><span class="line">        <span class="attribute">Sum_E</span>=Sum_E+Group_E;</span><br><span class="line">        <span class="attribute">Sum_Chi</span>=Sum_Chi+Chi;</span><br><span class="line">        <span class="attribute">Sum_CB</span>=Sum_CB+CB;</span><br><span class="line">    end</span><br><span class="line">    <span class="attribute">E</span>=Sum_E/N_group;</span><br><span class="line">    <span class="attribute">M</span>=Sum_M/N_group;</span><br><span class="line">    <span class="attribute">Chi</span>=Sum_Chi/N_group;         %几个组求得的磁化率的平均</span><br><span class="line">    <span class="attribute">CB</span>=Sum_CB/N_group;</span><br><span class="line"></span><br><span class="line">    CBB(iii)=CB; %用于存储不同J值对应的CB比热容</span><br><span class="line">    EE(iii)=E/N; %N为总格子数</span><br><span class="line">    MM(iii)=M/N;</span><br><span class="line">    Chi_1(iii)=Chi/N;</span><br><span class="line"></span><br><span class="line">end   %对应于<span class="keyword">for</span> <span class="attribute">iii</span>=1:length(J)</span><br><span class="line"> figure;plot(1./J,CBB,<span class="string">&#x27;r*-&#x27;</span>) %注意：由于1/0为无穷大，程序没有画出该点</span><br><span class="line"> title(<span class="string">&#x27;比热随耦合强度的倒数的变化关系&#x27;</span>)</span><br><span class="line"> xlabel(<span class="string">&#x27;1/J&#x27;</span>); ylabel(<span class="string">&#x27;C_B&#x27;</span>);</span><br><span class="line"> figure;plot(1./J,EE,<span class="string">&#x27;b&#x27;</span>)       %J值大，意味着温度低，M值大</span><br><span class="line"> title(<span class="string">&#x27;能量随耦合强度的倒数的变化关系&#x27;</span>)</span><br><span class="line"> xlabel(<span class="string">&#x27;1/J&#x27;</span>); ylabel(<span class="string">&#x27;能量E&#x27;</span>);</span><br><span class="line"> figure;plot(1./J,MM,<span class="string">&#x27;r&#x27;</span>) %注意，磁化强度可以朝不同方向，因此可以为负</span><br><span class="line"> title(<span class="string">&#x27;磁化强度随耦合强度的倒数的变化关系&#x27;</span>)</span><br><span class="line"> xlabel(<span class="string">&#x27;1/J&#x27;</span>); ylabel(<span class="string">&#x27;磁化强度M&#x27;</span>);</span><br><span class="line"> figure;plot(1./J,Chi_1,<span class="string">&#x27;k&#x27;</span>)</span><br><span class="line"> title(<span class="string">&#x27;磁化率随耦合强度的倒数的变化关系&#x27;</span>)</span><br><span class="line"> xlabel(<span class="string">&#x27;1/J&#x27;</span>); ylabel(<span class="string">&#x27;磁化率Chi&#x27;</span>);</span><br><span class="line"> S</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function [N,S]=initialize(NX,NY)   %初始化每个格子的自旋</span><br><span class="line"><span class="attribute">N</span>=NX*NY;</span><br><span class="line"><span class="keyword">for</span> <span class="attribute">i</span>=1:NY</span><br><span class="line">    <span class="keyword">for</span> <span class="attribute">j</span>=1:NX</span><br><span class="line">        <span class="keyword">if</span> rand &lt; 0.5</span><br><span class="line">            S(i,j)=1;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            S(i,j)=-1;</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">function [Magic,Energy]=Magic_Energy(B,JJ,NX,NY,S)  %求出一种情况下的磁化强度和能量E</span><br><span class="line"><span class="attribute">Magic</span>=0;</span><br><span class="line"><span class="attribute">Sum_ss</span>=0;</span><br><span class="line"><span class="keyword">for</span> <span class="attribute">i</span>=1:NY</span><br><span class="line">    <span class="keyword">if</span> i&gt;1</span><br><span class="line">        <span class="attribute">IM</span>=i-1;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="attribute">IM</span>=NY;</span><br><span class="line">    end</span><br><span class="line">    %====================</span><br><span class="line">    <span class="keyword">for</span> <span class="attribute">j</span>=1:NX</span><br><span class="line">        <span class="keyword">if</span> j&gt;1</span><br><span class="line">            <span class="attribute">JM</span>=j-1;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="attribute">JM</span>=NX;</span><br><span class="line">        end</span><br><span class="line">        %==================</span><br><span class="line">        <span class="attribute">Magic</span>=Magic+S(i,j);</span><br><span class="line">        <span class="attribute">Sum_ss</span>=Sum_ss+S(i,j)*(S(IM,j)+S(i,JM)); </span><br><span class="line">        %注意上式求和实际上是进行(8.18)式第一项的运算，但S(i,j)只与左格点和上格点相乘求和</span><br><span class="line">        %是因为如果上下左右四个格点都相乘求和，则存在重复计算的现象</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line"><span class="attribute">Energy</span>=-JJ*Sum_ss-B*Magic; %(8.18)式</span><br><span class="line">        </span><br><span class="line">function <span class="attribute">R</span>=flip_probs(JJ,B) %设定翻转判定矩阵</span><br><span class="line"><span class="keyword">for</span> <span class="attribute">i</span>=1:5</span><br><span class="line">    R(i,2)=exp(-2*(JJ*(2*i-6)+B));  %Sa为1</span><br><span class="line">    %自旋反转判定因子，page 147页的（8.23）式，PPT中的（2）式，R(:,2)代表中心点自旋向上</span><br><span class="line">    R(i,1)=exp(2*(JJ*(2*i-6)+B)); %分别对应于<span class="attribute">f</span>=-4，-2, 0, 2, 4</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">function [S,accept]=thermal_sweep(NX,NY,S,R)   </span><br><span class="line">%热化扫描函数，每次热化扫描后，所有的点都被遍历一次</span><br><span class="line"><span class="attribute">accept</span>=0;</span><br><span class="line"><span class="keyword">for</span> <span class="attribute">i</span>=1:NY</span><br><span class="line">    <span class="keyword">if</span> i&lt;NY         %采用周期性边界条件，此<span class="keyword">if</span>循环给定(i,j)粒子下面的相邻格点（i+1,j）</span><br><span class="line">        <span class="attribute">IP</span>=i+1;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="attribute">IP</span>=1;</span><br><span class="line">    end</span><br><span class="line">    <span class="keyword">if</span> i&gt;1         %采用周期性边界条件，此<span class="keyword">if</span>循环给定(i,j)粒子上面的相邻格点（i-1,j）</span><br><span class="line">        <span class="attribute">IM</span>=i-1;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="attribute">IM</span>=NY;</span><br><span class="line">    end</span><br><span class="line">    %==================</span><br><span class="line">    <span class="keyword">for</span> <span class="attribute">j</span>=1:NX</span><br><span class="line">        <span class="keyword">if</span> j&lt;NX %采用周期性边界条件，此<span class="keyword">if</span>循环给定(i,j)粒子右边的相邻格点（i,j+1）</span><br><span class="line">            <span class="attribute">JP</span>=j+1;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="attribute">JP</span>=1;</span><br><span class="line">        end</span><br><span class="line">        <span class="keyword">if</span> j&gt;1 %采用周期性边界条件，此<span class="keyword">if</span>循环给定(i,j)粒子左边的相邻格点（i,j-1）</span><br><span class="line">            <span class="attribute">JM</span>=j-1;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="attribute">JM</span>=NX;</span><br><span class="line">        end</span><br><span class="line">        %==================</span><br><span class="line">        <span class="attribute">spin</span>=S(i,j);     </span><br><span class="line">        <span class="attribute">f</span>=S(IP,j)+S(IM,j)+S(i,JP)+S(i,JM);</span><br><span class="line">        <span class="keyword">if</span> rand&gt;R(3+f/2,(3+spin)/2) %如果反转概率比随机数小，则不反转</span><br><span class="line">            %注意：f的取值只有-4，-2,0,2,4五种，spin只有-1,1两种，</span><br><span class="line">            %因此用R（5,2）二维数组即可以判定是否反转</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            S(i,j)=-spin;  %反转(i,j)点的自旋</span><br><span class="line">            <span class="attribute">accept</span>=accept+1;</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">end</span><br></pre></td></tr></table></figure></li></ul><h3 id="典型的例子"><a href="#典型的例子" class="headerlink" title="典型的例子"></a>典型的例子</h3><p>在作业文件夹中有一个”自定义函数”的子文件夹,里面有很多实用的, 暂时没有搬到笔记里面来。</p><h4 id="4-RK算法"><a href="#4-RK算法" class="headerlink" title="4-RK算法"></a>4-RK算法</h4><p>写了一个函数文件,可以以后调用。<br><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%这里是想写一个给定初态,分段,分段数目,函数迭代表达式,就可以返回函数自变量和因变量。</span></span><br><span class="line"><span class="comment">%f,可以是多因变量的,但是目前只支持单自变量。f的定义格式可以是f = @(x,y)[dy1/dx(x,y)  ,dy2/dx(x,y) ...]</span></span><br><span class="line"><span class="comment">%y 是因变量,这里要写成行变量的形式。[y1,y2...]</span></span><br><span class="line"><span class="comment">%x_start是x的起始点</span></span><br><span class="line"><span class="comment">%x_end是x的终止点</span></span><br><span class="line"><span class="comment">%n 是分段的数目,相当于自变量列表的数目是n+1</span></span><br><span class="line"><span class="comment">%支持倒序解</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[x,y]</span>= <span class="title">RK_solution</span><span class="params">(x_start,x_end,y_start,n,f)</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    h=(x_end-x_start)/n;</span><br><span class="line">    x=x_start:h:x_end;</span><br><span class="line"></span><br><span class="line">    <span class="comment">%通过这个变量(length)得到函数的因变量。  </span></span><br><span class="line">    <span class="built_in">length</span> = <span class="built_in">size</span>(y_start,<span class="number">2</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">%将因变量定义为元素为0的矩阵。</span></span><br><span class="line">    y = <span class="built_in">zeros</span>(n+<span class="number">1</span>,<span class="built_in">length</span>);</span><br><span class="line">    <span class="comment">%将函数因变量的第一行写为初态。</span></span><br><span class="line">    y(<span class="number">1</span>,:)=y_start;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">%利用R-K算法迭代</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:<span class="number">1</span>:n</span><br><span class="line">        xn=x(<span class="built_in">i</span>);</span><br><span class="line">        yn=y(<span class="built_in">i</span>,:);</span><br><span class="line">    </span><br><span class="line">        K1 = f(xn,yn);</span><br><span class="line">        K2 = f(xn+h/<span class="number">2</span>,yn+h/<span class="number">2.</span>*K1);</span><br><span class="line">        K3= f(xn+h/<span class="number">2</span>,yn+h/<span class="number">2.</span>*K2);</span><br><span class="line">        K4= f(xn+h,yn+h.*K3);</span><br><span class="line">        </span><br><span class="line">        y(<span class="built_in">i</span>+<span class="number">1</span>,:)=yn+h/<span class="number">6.</span>*(K1+<span class="number">2.</span>*K2+<span class="number">2.</span>*K3+K4);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><h4 id="Simpson38积分法"><a href="#Simpson38积分法" class="headerlink" title="Simpson38积分法"></a>Simpson38积分法</h4><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">% 定义simpson38算法的积分,算法可以做到给定函数和自变量数组就可以,需要注意的是x中的元素个数一定要是。<span class="number">3</span>的倍数+<span class="number">1</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">I_simpson38</span> = <span class="title">simpson38</span><span class="params">(x,f1)</span></span></span><br><span class="line"><span class="function">    <span class="title">I_simpson38</span>=3/8*<span class="title">abs</span><span class="params">(x(2)</span>-<span class="title">x</span><span class="params">(1)</span>)*<span class="params">(f1(1)</span>+3*<span class="title">sum</span><span class="params">(f1(2:3:<span class="keyword">end</span>-2)</span>)+3*<span class="title">sum</span><span class="params">(f1(3:3:<span class="keyword">end</span>-1)</span>)+2*<span class="title">sum</span><span class="params">(f1(4:3:<span class="keyword">end</span>-3)</span>)+<span class="title">f1</span><span class="params">(<span class="keyword">end</span>)</span>);</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h4 id="简单搜索发结合二分法"><a href="#简单搜索发结合二分法" class="headerlink" title="简单搜索发结合二分法"></a>简单搜索发结合二分法</h4><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">% 定义一个二分法结合简单搜索发寻找哦函数f从xstart到xend之间所有的根,并且寻找到的根的数目可以自定义为nmax.</span><br><span class="line">%搜索法的起始搜索步长设定为h。</span><br><span class="line">% xstart表示开始寻找的x值,xend表示最终搜索的x值,h表示搜索步长,f表示需要求根的函数,delta和<span class="built_in">epsilon</span>都表示误差。</span><br><span class="line"><span class="function"><span class="keyword">function</span></span> positions = finding(xstart,xend,nmax,f,delta,<span class="built_in">epsilon</span>,h)</span><br><span class="line">    positions = [];</span><br><span class="line">    <span class="keyword">number</span> = <span class="built_in">size</span>(positions,<span class="number">2</span>);</span><br><span class="line">    x0 = xstart;</span><br><span class="line">    h1 = h;</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">number</span> &lt; nmax &amp; x0 &lt; xend</span><br><span class="line">        h = h1;</span><br><span class="line">        <span class="keyword">while</span> <span class="built_in">abs</span>(f(x0)) &gt; delta | <span class="built_in">abs</span>(h) &gt; <span class="built_in">epsilon</span></span><br><span class="line">                        </span><br><span class="line">            <span class="keyword">if</span> f(x0)*f(x0+h)&gt;<span class="number">0</span></span><br><span class="line">                x0 = x0 + h;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                h = h/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">position</span> = [x0];</span><br><span class="line">        positions = [positions,<span class="keyword">position</span>];</span><br><span class="line">        <span class="keyword">number</span> = <span class="built_in">size</span>(positions,<span class="number">2</span>);</span><br><span class="line">        x0 = x0 + h1;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h4 id="薛定谔方程的本征值问题"><a href="#薛定谔方程的本征值问题" class="headerlink" title="薛定谔方程的本征值问题"></a>薛定谔方程的本征值问题</h4><p><strong>[[计算物理#求解薛定谔方程的本征值问题|前面章节讲到的打靶法]]</strong>  </p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%[energy,x,y] = find_energy(x_min,x_max,h,v,gamma,n,delta,delta_judge,epsilon,e_start,e_end,e_max,y1a,y1b)</span></span><br><span class="line"><span class="comment">%定义了一个函数叫做&quot;find_energy&quot;,他的作用是求解schrodinger方程的本征值问题。下面解释各个输入参数的意思。</span></span><br><span class="line"><span class="comment">%--------输入</span></span><br><span class="line"><span class="comment">%x_min,x_max分别表示求解薛定谔方程的区间,</span></span><br><span class="line"><span class="comment">%h表示初始的搜索步长(用于简单搜索法和二分法的结合)。h在这个算法中既是寻找xm的搜索步长,也是寻找能量本征值的搜索步长。</span></span><br><span class="line"><span class="comment">%v是定义的势能函数</span></span><br><span class="line"><span class="comment">% gamma是薛定谔方程无量纲化后的系数</span></span><br><span class="line"><span class="comment">%n是解薛定谔方程(从xmin到xm,和从xm到xmax)时的分段个数(注意分段个数一定是3的倍数(n是3的倍数);这是因为用了simson38算法)</span></span><br><span class="line"><span class="comment">%delta,epsilon 是二分法的delta,epsilon</span></span><br><span class="line"><span class="comment">%delta_judge是判断是否为阶跃点的判断标准!!!!!!!--------这个比较关键,因为这个关系到跳跃函数间断点。这个系数取的过小会漏掉一些本征值,取得过的大会增加计算时间。一般取8-100。</span></span><br><span class="line"><span class="comment">%e_start是寻找能量本征值的起点</span></span><br><span class="line"><span class="comment">%e_end是寻找能量本征值的终点(找到这个能量就停止)</span></span><br><span class="line"><span class="comment">%e_max是寻找能量本征值的最大数目(找到这个数目就停止)</span></span><br><span class="line"><span class="comment">%y1a,y1b是该算法中在xmin和xmax处薛定谔方程的初态,用列表的形式给出。详细见RK_solution 函数</span></span><br><span class="line"><span class="comment">%--------输出</span></span><br><span class="line"><span class="comment">%energy是一个行向量,从左到右,从小到大输出能量本征值</span></span><br><span class="line"><span class="comment">%x是一个列表,第i行是第i个本征值对应的本征态。</span></span><br><span class="line"><span class="comment">%y是一个列表,第i行是第i个本征值对应的本征态</span></span><br><span class="line"><span class="comment">%--------这个函数中引用了其它函数</span></span><br><span class="line"><span class="comment">%finding 是二分法结合简单搜索法的函数</span></span><br><span class="line"><span class="comment">%RK-Solution是用4-RK算法求解方程的函数。</span></span><br><span class="line"><span class="comment">%simpson38是辛普森3/8积分算法</span></span><br><span class="line"><span class="comment">% --------输入的例子</span></span><br><span class="line"><span class="comment">%下面的输入意味着在(-4,4)区间上,gamma是sqrt(50)，解势能函数为v(x)，的薛定谔方程,并且我们考察前六个能量本征值,最大的能量本征值不超过6。</span></span><br><span class="line"><span class="comment">%按照这个例子,会解出能量本征值和归一化的本征态,并且画出各个本征态的波函数。</span></span><br><span class="line"><span class="comment">%v = @(x)1/2.*x.^2-1</span></span><br><span class="line"><span class="comment">%[energy,x,y]=find_energy(-4,4,0.01,v,sqrt(50),300,0.01,50,0.01,-0.9990,6,6,[0,0.1],[0,0.1])</span></span><br><span class="line"><span class="comment">%number = size(energy,2)</span></span><br><span class="line"><span class="comment">%for i = 1:1:number</span></span><br><span class="line"><span class="comment">%    figure;</span></span><br><span class="line"><span class="comment">%    plot(x(i,:),y(i,:),&#x27;r&#x27;)</span></span><br><span class="line"><span class="comment">%end</span></span><br><span class="line"><span class="comment">%plot(x(1,:),v(x(1,:)))</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[energy,x,y]</span> = <span class="title">find_energy</span><span class="params">(x_min,x_max,h,v,gamma,n,delta,delta_judge,epsilon,e_start,e_end,e_max,y1a,y1b)</span></span></span><br><span class="line">   </span><br><span class="line">    energy = [];</span><br><span class="line">    x = [];</span><br><span class="line">    y = [];</span><br><span class="line">    number = <span class="built_in">size</span>(energy,<span class="number">2</span>);</span><br><span class="line">    e0 = e_start;</span><br><span class="line">    h1 = h;</span><br><span class="line">    delta1 = delta;</span><br><span class="line">    <span class="keyword">while</span> number &lt; e_max &amp;&amp; e0&lt; e_end</span><br><span class="line">        count = <span class="number">0</span>;</span><br><span class="line">        h1 = h;</span><br><span class="line">        delta1 = delta;</span><br><span class="line">        delta_judge1 = delta_judge;</span><br><span class="line">        [x0,y0,judge0]= solution_function(x_min,x_max,e0);</span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">abs</span>(judge0) &gt; delta1 | <span class="built_in">abs</span>(h1) &gt; epsilon ) &amp; e0 &lt; e_end</span><br><span class="line">            [x0,y0,judge0]= solution_function(x_min,x_max,e0);</span><br><span class="line">            [x1,y1,judge1]= solution_function(x_min,x_max,e0+h1);                        </span><br><span class="line">            judge1;</span><br><span class="line">            <span class="keyword">if</span> count &gt; <span class="number">1</span> &amp; <span class="built_in">abs</span>(judge1)&gt; delta_judge1</span><br><span class="line">                e0 = e0+h;</span><br><span class="line">                count = <span class="number">0</span>;</span><br><span class="line">                delta1 = delta;</span><br><span class="line">                h1 = h;</span><br><span class="line">                delta_judge1 = delta_judge;</span><br><span class="line">                [x0,y0,judge0]= solution_function(x_min,x_max,e0);</span><br><span class="line">                [x1,y1,judge1]= solution_function(x_min,x_max,e0+h1); </span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">if</span> judge0*judge1&lt;<span class="number">0</span> </span><br><span class="line">                h1 = h1/<span class="number">2</span>;</span><br><span class="line">                count = count+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> count == <span class="number">1</span></span><br><span class="line">                    delta1 = delta1*(<span class="built_in">abs</span>(judge0)+<span class="built_in">abs</span>(judge1))/<span class="number">2</span>;</span><br><span class="line">                    delta_judge1 = <span class="built_in">min</span>([<span class="built_in">abs</span>(judge0),<span class="built_in">abs</span>(judge1)]).*delta_judge1;            </span><br><span class="line">                <span class="keyword">end</span>            </span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                e0 = e0+h1;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">if</span> e0 &lt; e_end</span><br><span class="line">            e = [e0];</span><br><span class="line">            energy = [energy,e];</span><br><span class="line">            x = [x;x0];</span><br><span class="line">            y2 = y0.^<span class="number">2</span>;</span><br><span class="line">            I = simpson38(x0(<span class="number">1</span>:n+<span class="number">1</span>),y2(<span class="number">1</span>:n+<span class="number">1</span>)) + simpson38(x0(n+<span class="number">1</span>:<span class="number">2</span>*n+<span class="number">1</span>),y2(n+<span class="number">1</span>:<span class="number">2</span>*n+<span class="number">1</span>));</span><br><span class="line">            y0 = y0./<span class="built_in">sqrt</span>(I);</span><br><span class="line">            y = [y;y0];</span><br><span class="line">            number = <span class="built_in">size</span>(energy,<span class="number">2</span>);</span><br><span class="line">            e0 = e0 + h;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">xm</span> = <span class="title">find_xm</span><span class="params">(e)</span></span></span><br><span class="line">        f = @(x)(e-v(x));</span><br><span class="line">        xm = finding(x_min,x_max,<span class="number">1</span>,f,delta,epsilon,h);</span><br><span class="line">        xm = xm(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="params">[x,y,judge]</span> = <span class="title">solution_function</span><span class="params">(x_min,x_max,e)</span></span></span><br><span class="line">        xm = find_xm(e);</span><br><span class="line">        f = @(x,y)[y(<span class="number">2</span>),-<span class="built_in">gamma</span>^<span class="number">2</span>*(e-v(x))*y(<span class="number">1</span>)];</span><br><span class="line">        [xl,yl]=RK_solution(x_min,xm,y1a,n,f);</span><br><span class="line">        [xr,yr]=RK_solution(x_max,xm,y1b,n,f);</span><br><span class="line">        xr = flip(xr);</span><br><span class="line">        yr = flip(yr,<span class="number">1</span>);</span><br><span class="line">        yl = yl(:,<span class="number">1</span>)&#x27;;</span><br><span class="line">        yr = yr(:,<span class="number">1</span>)&#x27;;</span><br><span class="line">        x = [xl,xr(<span class="number">2</span>:n+<span class="number">1</span>)];</span><br><span class="line">        yr = yr.*(yl(n+<span class="number">1</span>)/yr(<span class="number">1</span>));</span><br><span class="line">        y = [yl,yr(<span class="number">1</span>,<span class="number">2</span>:n+<span class="number">1</span>)];</span><br><span class="line">        judge = (y(n+<span class="number">2</span>)-y(n+<span class="number">1</span>))/(x(n+<span class="number">2</span>)-x(n+<span class="number">1</span>))-(y(n+<span class="number">1</span>)-y(n))/(x(n+<span class="number">1</span>)-x(n));</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><strong>索末菲方法</strong></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%sommerfeld_energy = sommerfeld(n,v,gamma,h,delta,epsilon,x_l,x_r,e_start) </span></span><br><span class="line"><span class="comment">%--------输入</span></span><br><span class="line"><span class="comment">% n代表态,n=0表示基态,v代表势能函数,gamma代表系数。h是能量的搜索步长,也是无量纲化后寻找经典允许区域边界的搜索步长。x_l是寻找允许区左边界的启动点,x_r是寻找允许区右边界的搜索启动点,x_start是能量本征值的修锁启动点。</span></span><br><span class="line"><span class="comment">%--------输出</span></span><br><span class="line"><span class="comment">%会输出一个具体的数,代表着这个态的能量本征值。</span></span><br><span class="line"><span class="comment">%--------例子</span></span><br><span class="line"><span class="comment">%v = @(x)4*(x.^(-12)-x.^(-6))</span></span><br><span class="line"><span class="comment">%sommerfeld_energy = sommerfeld(1,v,20,0.01,0.01,0.01,0.999,2^(1/6),-0.9999)</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sommerfeld_energy</span> = <span class="title">sommerfeld</span><span class="params">(n,v,gamma,h,delta,epsilon,x_l,x_r,e_start)</span> </span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="comment">%start1,start3后来被用来简单搜索法的启动点(搜索xin,xout)</span></span><br><span class="line">    <span class="comment">%start1 = 0.999;</span></span><br><span class="line">    <span class="comment">%start3 = 2^(1/6);</span></span><br><span class="line">    <span class="comment">%start5 = -1;</span></span><br><span class="line"></span><br><span class="line">    start1 = x_l;</span><br><span class="line">    start3 = x_r;</span><br><span class="line">    start5 = e_start;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">%定义精度和寻找步长</span></span><br><span class="line">    <span class="comment">%epsilon = 0.001;</span></span><br><span class="line">    <span class="comment">%delta = 0.0001;</span></span><br><span class="line">    <span class="comment">%h = 0.0001;</span></span><br><span class="line"></span><br><span class="line">    y = @(x)integrate(<span class="built_in">gamma</span>,x,start1,start3,h,delta)-(n+<span class="number">1</span>/<span class="number">2</span>)*<span class="built_in">pi</span>;</span><br><span class="line">    sommerfeld_energy = simple(y,start5,h,delta);</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">I_simpson38</span>  = <span class="title">integrate</span><span class="params">(gamma,epsn,start1,start3,h,delta)</span></span></span><br><span class="line">        y0 = @(x)epsn-v(x);</span><br><span class="line">        xin = simple(y0,start1,h,delta);</span><br><span class="line">        xout = simple(y0,start3,h,delta);</span><br><span class="line">        y1 = @(x)<span class="built_in">gamma</span>*(epsn-v(x)).^(<span class="number">1</span>/<span class="number">2</span>);</span><br><span class="line">        N = <span class="number">600</span>;</span><br><span class="line">        H = (xout-xin)/N;</span><br><span class="line">        x = xin:H:xout; </span><br><span class="line">        f1 = y1(x);</span><br><span class="line">        I_simpson38=<span class="number">3</span>/<span class="number">8</span>*H*(f1(<span class="number">1</span>)+<span class="number">3</span>*sum(f1(<span class="number">2</span>:<span class="number">3</span>:<span class="keyword">end</span><span class="number">-2</span>))+<span class="number">3</span>*sum(f1(<span class="number">3</span>:<span class="number">3</span>:<span class="keyword">end</span><span class="number">-1</span>))+<span class="number">2</span>*sum(f1(<span class="number">4</span>:<span class="number">3</span>:<span class="keyword">end</span><span class="number">-3</span>))+f1(<span class="keyword">end</span>));  </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">position</span>=<span class="title">simple</span><span class="params">(f, x0, h, delta)</span> </span></span><br><span class="line">        <span class="keyword">while</span> <span class="built_in">abs</span>(f(x0)) &gt; delta</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">if</span> f(x0)*f(x0+h)&gt;<span class="number">0</span></span><br><span class="line">            x0 = x0 + h;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            h = h/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        position = x0;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 物理中的数学技巧 </category>
          
          <category> 计算物理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算物理 </tag>
            
            <tag> matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>量子场论笔记</title>
      <link href="/2024/06/10/liang-zi-chang-lun-bi-ji/"/>
      <url>/2024/06/10/liang-zi-chang-lun-bi-ji/</url>
      
        <content type="html"><![CDATA[<p>不知道为什么，这个pdf在网页中的显示效果并不好，我觉得在chrome浏览器中显示效果好一些，在safari浏览器中，可以把pdf下载下来，将鼠标移动到pdf底部的中间部分可以弹出下载按钮，需要后面再调整吧。</p><p>可以点击这个链接下载：<a href="QFT.pdf">下载链接</a></p><embed src="./QFT.pdf" width="100%" height="900" type="application/pdf">]]></content>
      
      
      <categories>
          
          <category> 量子场论 </category>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 量子场论 </tag>
            
            <tag> 量子力学 </tag>
            
            <tag> QFT </tag>
            
            <tag> 泛函 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一个测试文章</title>
      <link href="/2024/06/10/di-yi-ge-ce-shi-wen-zhang/"/>
      <url>/2024/06/10/di-yi-ge-ce-shi-wen-zhang/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/06/10/hello-world/"/>
      <url>/2024/06/10/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
